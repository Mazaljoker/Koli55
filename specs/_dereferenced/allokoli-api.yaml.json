{
  "openapi": "3.1.0",
  "info": {
    "title": "AlloKoli API",
    "description": "API pour la gestion des assistants vocaux IA via Vapi.\nCette API permet de gérer les assistants, les bases de connaissances, les appels et les numéros de téléphone.\n",
    "version": "1.0.0",
    "contact": {
      "name": "AlloKoli Support",
      "url": "https://allokoli.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://{project-id}.supabase.co/functions/v1",
      "description": "Serveur de production Supabase",
      "variables": {
        "project-id": {
          "default": "your-project-id",
          "description": "ID de votre projet Supabase"
        }
      }
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/assistants": {
      "get": {
        "summary": "Lister les assistants",
        "description": "Récupère la liste paginée des assistants de l'utilisateur actuel",
        "operationId": "listAssistants",
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de page (commence à 1)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des assistants récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Identifiant unique de l'assistant"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Nom de l'assistant"
                          },
                          "model": {
                            "oneOf": [
                              {
                                "type": "string",
                                "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "provider",
                                  "model"
                                ],
                                "properties": {
                                  "provider": {
                                    "type": "string",
                                    "enum": [
                                      "openai",
                                      "anthropic",
                                      "groq",
                                      "azure"
                                    ],
                                    "description": "Fournisseur du modèle"
                                  },
                                  "model": {
                                    "type": "string",
                                    "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                                  },
                                  "systemPrompt": {
                                    "type": "string",
                                    "description": "Prompt système"
                                  },
                                  "temperature": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 2,
                                    "description": "Température du modèle"
                                  },
                                  "topP": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "description": "Top-p du modèle"
                                  },
                                  "maxTokens": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Nombre maximum de tokens"
                                  }
                                }
                              }
                            ]
                          },
                          "voice": {
                            "oneOf": [
                              {
                                "type": "string",
                                "description": "ID simple de la voix"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "provider",
                                  "voiceId"
                                ],
                                "properties": {
                                  "provider": {
                                    "type": "string",
                                    "enum": [
                                      "elevenlabs",
                                      "azure",
                                      "openai",
                                      "deepgram",
                                      "playht"
                                    ],
                                    "description": "Fournisseur de la voix"
                                  },
                                  "voiceId": {
                                    "type": "string",
                                    "description": "ID de la voix"
                                  },
                                  "cachingEnabled": {
                                    "type": "boolean",
                                    "description": "Cache activé pour la voix"
                                  }
                                }
                              }
                            ]
                          },
                          "transcriber": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "deepgram",
                                  "assembly-ai",
                                  "google",
                                  "azure",
                                  "custom-transcriber"
                                ],
                                "description": "Fournisseur de transcription"
                              },
                              "model": {
                                "type": "string",
                                "description": "Modèle de transcription"
                              },
                              "language": {
                                "type": "string",
                                "description": "Langue de transcription (ex. \"fr-FR\")"
                              },
                              "confidenceThreshold": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Seuil de confiance"
                              },
                              "server": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "secret": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "firstMessage": {
                            "type": "string",
                            "description": "Premier message de l'assistant"
                          },
                          "firstMessageInterruptionsEnabled": {
                            "type": "boolean",
                            "description": "Permet les interruptions du premier message"
                          },
                          "firstMessageMode": {
                            "type": "string",
                            "enum": [
                              "assistant-speaks-first",
                              "assistant-waits-for-user"
                            ],
                            "description": "Mode du premier message"
                          },
                          "endCallMessage": {
                            "type": "string",
                            "description": "Message de fin d'appel"
                          },
                          "endCallPhrases": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Phrases qui déclenchent la fin d'appel"
                          },
                          "voicemailMessage": {
                            "type": "string",
                            "description": "Message de répondeur"
                          },
                          "voicemailDetection": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "twilio",
                                  "google"
                                ]
                              }
                            }
                          },
                          "tools": {
                            "type": "object",
                            "properties": {
                              "functions": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "knowledgeBases": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "workflows": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          },
                          "clientMessages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "serverMessages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "forwardingPhoneNumber": {
                            "type": "string",
                            "pattern": "^\\+[1-9]\\d{1,14}$",
                            "description": "Numéro de téléphone de transfert (format E.164)"
                          },
                          "silenceTimeoutSeconds": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 600,
                            "description": "Timeout de silence en secondes"
                          },
                          "maxDurationSeconds": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 3600,
                            "description": "Durée maximale d'appel en secondes"
                          },
                          "endCallAfterSilence": {
                            "type": "boolean",
                            "description": "Terminer l'appel après silence"
                          },
                          "backgroundSound": {
                            "type": "string",
                            "enum": [
                              "off",
                              "office"
                            ],
                            "description": "Son de fond"
                          },
                          "backgroundDenoisingEnabled": {
                            "type": "boolean",
                            "description": "Réduction de bruit activée"
                          },
                          "modelOutputInMessagesEnabled": {
                            "type": "boolean",
                            "description": "Sortie du modèle dans les messages"
                          },
                          "artifactPlan": {
                            "type": "object",
                            "properties": {
                              "recordingEnabled": {
                                "type": "boolean"
                              },
                              "recordingFormat": {
                                "type": "string"
                              },
                              "videoRecordingEnabled": {
                                "type": "boolean"
                              },
                              "pcapEnabled": {
                                "type": "boolean"
                              },
                              "pcapS3PathPrefix": {
                                "type": "string"
                              },
                              "transcriptPlan": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "startSpeakingPlan": {
                            "type": "object",
                            "properties": {
                              "waitSeconds": {
                                "type": "number",
                                "minimum": 0
                              }
                            }
                          },
                          "stopSpeakingPlan": {
                            "type": "object",
                            "properties": {
                              "numWords": {
                                "type": "integer",
                                "minimum": 1
                              },
                              "voiceSeconds": {
                                "type": "number",
                                "minimum": 0
                              },
                              "backoffSeconds": {
                                "type": "number",
                                "minimum": 0
                              }
                            }
                          },
                          "monitorPlan": {
                            "type": "object",
                            "properties": {
                              "listenEnabled": {
                                "type": "boolean"
                              },
                              "listenAuthenticationEnabled": {
                                "type": "boolean"
                              },
                              "controlEnabled": {
                                "type": "boolean"
                              },
                              "controlAuthenticationEnabled": {
                                "type": "boolean"
                              }
                            }
                          },
                          "analysisPlan": {
                            "type": "object",
                            "properties": {
                              "summaryPrompt": {
                                "type": "string"
                              },
                              "structuredDataPrompt": {
                                "type": "string"
                              },
                              "structuredDataSchema": {
                                "type": "object",
                                "additionalProperties": true
                              },
                              "successEvaluationPrompt": {
                                "type": "string"
                              },
                              "successEvaluationRubric": {
                                "type": "string"
                              }
                            }
                          },
                          "observabilityPlan": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "langfuse"
                                ]
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "transportConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "provider"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "twilio",
                                    "vonage",
                                    "telnyx"
                                  ]
                                },
                                "timeout": {
                                  "type": "number",
                                  "minimum": 1
                                },
                                "record": {
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "credentials": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "provider"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string"
                                },
                                "apiKey": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "credentialIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uuid"
                            }
                          },
                          "hooks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "on",
                                "do"
                              ],
                              "properties": {
                                "on": {
                                  "type": "string",
                                  "description": "Événement déclencheur (ex. \"call.ending\")"
                                },
                                "do": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                                      }
                                    },
                                    "additionalProperties": true
                                  }
                                }
                              }
                            }
                          },
                          "variableValues": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "server": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "uri"
                              },
                              "timeoutSeconds": {
                                "type": "number",
                                "minimum": 1
                              },
                              "backoffPlan": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "maxRetries": {
                                    "type": "integer",
                                    "minimum": 0
                                  },
                                  "baseDelaySeconds": {
                                    "type": "number",
                                    "minimum": 0
                                  }
                                }
                              }
                            }
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Métadonnées personnalisées"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date de création"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date de dernière modification"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "required": [
                        "page",
                        "limit",
                        "total",
                        "has_more"
                      ],
                      "properties": {
                        "page": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Page actuelle"
                        },
                        "limit": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Nombre d'éléments par page"
                        },
                        "total": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre total d'éléments"
                        },
                        "has_more": {
                          "type": "boolean",
                          "description": "Indique s'il y a plus de pages"
                        }
                      }
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer un assistant",
        "description": "Crée un nouvel assistant vocal IA",
        "operationId": "createAssistant",
        "tags": [
          "Assistants"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Nom de l'assistant"
                  },
                  "model": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Nom simple du modèle"
                      },
                      {
                        "type": "object",
                        "required": [
                          "provider",
                          "model"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "openai",
                              "anthropic",
                              "groq",
                              "azure"
                            ],
                            "description": "Fournisseur du modèle"
                          },
                          "model": {
                            "type": "string",
                            "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                          },
                          "systemPrompt": {
                            "type": "string",
                            "description": "Prompt système"
                          },
                          "temperature": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 2,
                            "description": "Température du modèle"
                          },
                          "topP": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Top-p du modèle"
                          },
                          "maxTokens": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Nombre maximum de tokens"
                          }
                        }
                      }
                    ]
                  },
                  "voice": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "ID simple de la voix"
                      },
                      {
                        "type": "object",
                        "required": [
                          "provider",
                          "voiceId"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "elevenlabs",
                              "azure",
                              "openai",
                              "deepgram",
                              "playht"
                            ],
                            "description": "Fournisseur de la voix"
                          },
                          "voiceId": {
                            "type": "string",
                            "description": "ID de la voix"
                          },
                          "cachingEnabled": {
                            "type": "boolean",
                            "description": "Cache activé pour la voix"
                          }
                        }
                      }
                    ]
                  },
                  "transcriber": {
                    "type": "object",
                    "required": [
                      "provider"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "deepgram",
                          "assembly-ai",
                          "google",
                          "azure",
                          "custom-transcriber"
                        ],
                        "description": "Fournisseur de transcription"
                      },
                      "model": {
                        "type": "string",
                        "description": "Modèle de transcription"
                      },
                      "language": {
                        "type": "string",
                        "description": "Langue de transcription (ex. \"fr-FR\")"
                      },
                      "confidenceThreshold": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Seuil de confiance"
                      },
                      "server": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "secret": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "firstMessage": {
                    "type": "string"
                  },
                  "firstMessageInterruptionsEnabled": {
                    "type": "boolean"
                  },
                  "firstMessageMode": {
                    "type": "string",
                    "enum": [
                      "assistant-speaks-first",
                      "assistant-waits-for-user"
                    ]
                  },
                  "endCallMessage": {
                    "type": "string"
                  },
                  "endCallPhrases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "voicemailMessage": {
                    "type": "string"
                  },
                  "voicemailDetection": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "twilio",
                          "google"
                        ]
                      }
                    }
                  },
                  "tools": {
                    "type": "object",
                    "properties": {
                      "functions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "knowledgeBases": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  },
                  "clientMessages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serverMessages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "forwardingPhoneNumber": {
                    "type": "string",
                    "pattern": "^\\+[1-9]\\d{1,14}$"
                  },
                  "silenceTimeoutSeconds": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 600
                  },
                  "maxDurationSeconds": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 3600
                  },
                  "endCallAfterSilence": {
                    "type": "boolean"
                  },
                  "backgroundSound": {
                    "type": "string",
                    "enum": [
                      "off",
                      "office"
                    ]
                  },
                  "backgroundDenoisingEnabled": {
                    "type": "boolean"
                  },
                  "modelOutputInMessagesEnabled": {
                    "type": "boolean"
                  },
                  "artifactPlan": {
                    "type": "object",
                    "properties": {
                      "recordingEnabled": {
                        "type": "boolean"
                      },
                      "recordingFormat": {
                        "type": "string"
                      },
                      "videoRecordingEnabled": {
                        "type": "boolean"
                      },
                      "pcapEnabled": {
                        "type": "boolean"
                      },
                      "pcapS3PathPrefix": {
                        "type": "string"
                      },
                      "transcriptPlan": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "startSpeakingPlan": {
                    "type": "object",
                    "properties": {
                      "waitSeconds": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  },
                  "stopSpeakingPlan": {
                    "type": "object",
                    "properties": {
                      "numWords": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "voiceSeconds": {
                        "type": "number",
                        "minimum": 0
                      },
                      "backoffSeconds": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  },
                  "monitorPlan": {
                    "type": "object",
                    "properties": {
                      "listenEnabled": {
                        "type": "boolean"
                      },
                      "listenAuthenticationEnabled": {
                        "type": "boolean"
                      },
                      "controlEnabled": {
                        "type": "boolean"
                      },
                      "controlAuthenticationEnabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "analysisPlan": {
                    "type": "object",
                    "properties": {
                      "summaryPrompt": {
                        "type": "string"
                      },
                      "structuredDataPrompt": {
                        "type": "string"
                      },
                      "structuredDataSchema": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "successEvaluationPrompt": {
                        "type": "string"
                      },
                      "successEvaluationRubric": {
                        "type": "string"
                      }
                    }
                  },
                  "observabilityPlan": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "langfuse"
                        ]
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transportConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "provider"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": [
                            "twilio",
                            "vonage",
                            "telnyx"
                          ]
                        },
                        "timeout": {
                          "type": "number",
                          "minimum": 1
                        },
                        "record": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "credentials": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "provider"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "apiKey": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "credentialIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "hooks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "on",
                        "do"
                      ],
                      "properties": {
                        "on": {
                          "type": "string",
                          "description": "Événement déclencheur (ex. \"call.ending\")"
                        },
                        "do": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                              }
                            },
                            "additionalProperties": true
                          }
                        }
                      }
                    }
                  },
                  "variableValues": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "server": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timeoutSeconds": {
                        "type": "number",
                        "minimum": 1
                      },
                      "backoffPlan": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "maxRetries": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "baseDelaySeconds": {
                            "type": "number",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assistant créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de l'assistant"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "Nom de l'assistant"
                        },
                        "model": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "model"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "openai",
                                    "anthropic",
                                    "groq",
                                    "azure"
                                  ],
                                  "description": "Fournisseur du modèle"
                                },
                                "model": {
                                  "type": "string",
                                  "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                                },
                                "systemPrompt": {
                                  "type": "string",
                                  "description": "Prompt système"
                                },
                                "temperature": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 2,
                                  "description": "Température du modèle"
                                },
                                "topP": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "description": "Top-p du modèle"
                                },
                                "maxTokens": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "description": "Nombre maximum de tokens"
                                }
                              }
                            }
                          ]
                        },
                        "voice": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "ID simple de la voix"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "voiceId"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "elevenlabs",
                                    "azure",
                                    "openai",
                                    "deepgram",
                                    "playht"
                                  ],
                                  "description": "Fournisseur de la voix"
                                },
                                "voiceId": {
                                  "type": "string",
                                  "description": "ID de la voix"
                                },
                                "cachingEnabled": {
                                  "type": "boolean",
                                  "description": "Cache activé pour la voix"
                                }
                              }
                            }
                          ]
                        },
                        "transcriber": {
                          "type": "object",
                          "required": [
                            "provider"
                          ],
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "deepgram",
                                "assembly-ai",
                                "google",
                                "azure",
                                "custom-transcriber"
                              ],
                              "description": "Fournisseur de transcription"
                            },
                            "model": {
                              "type": "string",
                              "description": "Modèle de transcription"
                            },
                            "language": {
                              "type": "string",
                              "description": "Langue de transcription (ex. \"fr-FR\")"
                            },
                            "confidenceThreshold": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1,
                              "description": "Seuil de confiance"
                            },
                            "server": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "secret": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "firstMessage": {
                          "type": "string",
                          "description": "Premier message de l'assistant"
                        },
                        "firstMessageInterruptionsEnabled": {
                          "type": "boolean",
                          "description": "Permet les interruptions du premier message"
                        },
                        "firstMessageMode": {
                          "type": "string",
                          "enum": [
                            "assistant-speaks-first",
                            "assistant-waits-for-user"
                          ],
                          "description": "Mode du premier message"
                        },
                        "endCallMessage": {
                          "type": "string",
                          "description": "Message de fin d'appel"
                        },
                        "endCallPhrases": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Phrases qui déclenchent la fin d'appel"
                        },
                        "voicemailMessage": {
                          "type": "string",
                          "description": "Message de répondeur"
                        },
                        "voicemailDetection": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "twilio",
                                "google"
                              ]
                            }
                          }
                        },
                        "tools": {
                          "type": "object",
                          "properties": {
                            "functions": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "knowledgeBases": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "workflows": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          }
                        },
                        "clientMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "serverMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "forwardingPhoneNumber": {
                          "type": "string",
                          "pattern": "^\\+[1-9]\\d{1,14}$",
                          "description": "Numéro de téléphone de transfert (format E.164)"
                        },
                        "silenceTimeoutSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 600,
                          "description": "Timeout de silence en secondes"
                        },
                        "maxDurationSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 3600,
                          "description": "Durée maximale d'appel en secondes"
                        },
                        "endCallAfterSilence": {
                          "type": "boolean",
                          "description": "Terminer l'appel après silence"
                        },
                        "backgroundSound": {
                          "type": "string",
                          "enum": [
                            "off",
                            "office"
                          ],
                          "description": "Son de fond"
                        },
                        "backgroundDenoisingEnabled": {
                          "type": "boolean",
                          "description": "Réduction de bruit activée"
                        },
                        "modelOutputInMessagesEnabled": {
                          "type": "boolean",
                          "description": "Sortie du modèle dans les messages"
                        },
                        "artifactPlan": {
                          "type": "object",
                          "properties": {
                            "recordingEnabled": {
                              "type": "boolean"
                            },
                            "recordingFormat": {
                              "type": "string"
                            },
                            "videoRecordingEnabled": {
                              "type": "boolean"
                            },
                            "pcapEnabled": {
                              "type": "boolean"
                            },
                            "pcapS3PathPrefix": {
                              "type": "string"
                            },
                            "transcriptPlan": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "startSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "waitSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "stopSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "numWords": {
                              "type": "integer",
                              "minimum": 1
                            },
                            "voiceSeconds": {
                              "type": "number",
                              "minimum": 0
                            },
                            "backoffSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "monitorPlan": {
                          "type": "object",
                          "properties": {
                            "listenEnabled": {
                              "type": "boolean"
                            },
                            "listenAuthenticationEnabled": {
                              "type": "boolean"
                            },
                            "controlEnabled": {
                              "type": "boolean"
                            },
                            "controlAuthenticationEnabled": {
                              "type": "boolean"
                            }
                          }
                        },
                        "analysisPlan": {
                          "type": "object",
                          "properties": {
                            "summaryPrompt": {
                              "type": "string"
                            },
                            "structuredDataPrompt": {
                              "type": "string"
                            },
                            "structuredDataSchema": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "successEvaluationPrompt": {
                              "type": "string"
                            },
                            "successEvaluationRubric": {
                              "type": "string"
                            }
                          }
                        },
                        "observabilityPlan": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "langfuse"
                              ]
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "transportConfigurations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "twilio",
                                  "vonage",
                                  "telnyx"
                                ]
                              },
                              "timeout": {
                                "type": "number",
                                "minimum": 1
                              },
                              "record": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "credentials": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "credentialIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "hooks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "on",
                              "do"
                            ],
                            "properties": {
                              "on": {
                                "type": "string",
                                "description": "Événement déclencheur (ex. \"call.ending\")"
                              },
                              "do": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              }
                            }
                          }
                        },
                        "variableValues": {
                          "type": "object",
                          "additionalProperties": true
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "timeoutSeconds": {
                              "type": "number",
                              "minimum": 1
                            },
                            "backoffPlan": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "maxRetries": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "baseDelaySeconds": {
                                  "type": "number",
                                  "minimum": 0
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/assistants/{id}": {
      "get": {
        "summary": "Récupérer un assistant",
        "description": "Récupère un assistant par son ID",
        "operationId": "getAssistant",
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'assistant",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de l'assistant"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "Nom de l'assistant"
                        },
                        "model": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "model"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "openai",
                                    "anthropic",
                                    "groq",
                                    "azure"
                                  ],
                                  "description": "Fournisseur du modèle"
                                },
                                "model": {
                                  "type": "string",
                                  "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                                },
                                "systemPrompt": {
                                  "type": "string",
                                  "description": "Prompt système"
                                },
                                "temperature": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 2,
                                  "description": "Température du modèle"
                                },
                                "topP": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "description": "Top-p du modèle"
                                },
                                "maxTokens": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "description": "Nombre maximum de tokens"
                                }
                              }
                            }
                          ]
                        },
                        "voice": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "ID simple de la voix"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "voiceId"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "elevenlabs",
                                    "azure",
                                    "openai",
                                    "deepgram",
                                    "playht"
                                  ],
                                  "description": "Fournisseur de la voix"
                                },
                                "voiceId": {
                                  "type": "string",
                                  "description": "ID de la voix"
                                },
                                "cachingEnabled": {
                                  "type": "boolean",
                                  "description": "Cache activé pour la voix"
                                }
                              }
                            }
                          ]
                        },
                        "transcriber": {
                          "type": "object",
                          "required": [
                            "provider"
                          ],
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "deepgram",
                                "assembly-ai",
                                "google",
                                "azure",
                                "custom-transcriber"
                              ],
                              "description": "Fournisseur de transcription"
                            },
                            "model": {
                              "type": "string",
                              "description": "Modèle de transcription"
                            },
                            "language": {
                              "type": "string",
                              "description": "Langue de transcription (ex. \"fr-FR\")"
                            },
                            "confidenceThreshold": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1,
                              "description": "Seuil de confiance"
                            },
                            "server": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "secret": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "firstMessage": {
                          "type": "string",
                          "description": "Premier message de l'assistant"
                        },
                        "firstMessageInterruptionsEnabled": {
                          "type": "boolean",
                          "description": "Permet les interruptions du premier message"
                        },
                        "firstMessageMode": {
                          "type": "string",
                          "enum": [
                            "assistant-speaks-first",
                            "assistant-waits-for-user"
                          ],
                          "description": "Mode du premier message"
                        },
                        "endCallMessage": {
                          "type": "string",
                          "description": "Message de fin d'appel"
                        },
                        "endCallPhrases": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Phrases qui déclenchent la fin d'appel"
                        },
                        "voicemailMessage": {
                          "type": "string",
                          "description": "Message de répondeur"
                        },
                        "voicemailDetection": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "twilio",
                                "google"
                              ]
                            }
                          }
                        },
                        "tools": {
                          "type": "object",
                          "properties": {
                            "functions": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "knowledgeBases": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "workflows": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          }
                        },
                        "clientMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "serverMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "forwardingPhoneNumber": {
                          "type": "string",
                          "pattern": "^\\+[1-9]\\d{1,14}$",
                          "description": "Numéro de téléphone de transfert (format E.164)"
                        },
                        "silenceTimeoutSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 600,
                          "description": "Timeout de silence en secondes"
                        },
                        "maxDurationSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 3600,
                          "description": "Durée maximale d'appel en secondes"
                        },
                        "endCallAfterSilence": {
                          "type": "boolean",
                          "description": "Terminer l'appel après silence"
                        },
                        "backgroundSound": {
                          "type": "string",
                          "enum": [
                            "off",
                            "office"
                          ],
                          "description": "Son de fond"
                        },
                        "backgroundDenoisingEnabled": {
                          "type": "boolean",
                          "description": "Réduction de bruit activée"
                        },
                        "modelOutputInMessagesEnabled": {
                          "type": "boolean",
                          "description": "Sortie du modèle dans les messages"
                        },
                        "artifactPlan": {
                          "type": "object",
                          "properties": {
                            "recordingEnabled": {
                              "type": "boolean"
                            },
                            "recordingFormat": {
                              "type": "string"
                            },
                            "videoRecordingEnabled": {
                              "type": "boolean"
                            },
                            "pcapEnabled": {
                              "type": "boolean"
                            },
                            "pcapS3PathPrefix": {
                              "type": "string"
                            },
                            "transcriptPlan": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "startSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "waitSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "stopSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "numWords": {
                              "type": "integer",
                              "minimum": 1
                            },
                            "voiceSeconds": {
                              "type": "number",
                              "minimum": 0
                            },
                            "backoffSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "monitorPlan": {
                          "type": "object",
                          "properties": {
                            "listenEnabled": {
                              "type": "boolean"
                            },
                            "listenAuthenticationEnabled": {
                              "type": "boolean"
                            },
                            "controlEnabled": {
                              "type": "boolean"
                            },
                            "controlAuthenticationEnabled": {
                              "type": "boolean"
                            }
                          }
                        },
                        "analysisPlan": {
                          "type": "object",
                          "properties": {
                            "summaryPrompt": {
                              "type": "string"
                            },
                            "structuredDataPrompt": {
                              "type": "string"
                            },
                            "structuredDataSchema": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "successEvaluationPrompt": {
                              "type": "string"
                            },
                            "successEvaluationRubric": {
                              "type": "string"
                            }
                          }
                        },
                        "observabilityPlan": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "langfuse"
                              ]
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "transportConfigurations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "twilio",
                                  "vonage",
                                  "telnyx"
                                ]
                              },
                              "timeout": {
                                "type": "number",
                                "minimum": 1
                              },
                              "record": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "credentials": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "credentialIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "hooks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "on",
                              "do"
                            ],
                            "properties": {
                              "on": {
                                "type": "string",
                                "description": "Événement déclencheur (ex. \"call.ending\")"
                              },
                              "do": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              }
                            }
                          }
                        },
                        "variableValues": {
                          "type": "object",
                          "additionalProperties": true
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "timeoutSeconds": {
                              "type": "number",
                              "minimum": 1
                            },
                            "backoffPlan": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "maxRetries": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "baseDelaySeconds": {
                                  "type": "number",
                                  "minimum": 0
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Mettre à jour un assistant",
        "description": "Met à jour un assistant existant",
        "operationId": "updateAssistant",
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'assistant",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "model": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "required": [
                          "provider",
                          "model"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "openai",
                              "anthropic",
                              "groq",
                              "azure"
                            ],
                            "description": "Fournisseur du modèle"
                          },
                          "model": {
                            "type": "string",
                            "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                          },
                          "systemPrompt": {
                            "type": "string",
                            "description": "Prompt système"
                          },
                          "temperature": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 2,
                            "description": "Température du modèle"
                          },
                          "topP": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Top-p du modèle"
                          },
                          "maxTokens": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Nombre maximum de tokens"
                          }
                        }
                      }
                    ]
                  },
                  "voice": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "required": [
                          "provider",
                          "voiceId"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "elevenlabs",
                              "azure",
                              "openai",
                              "deepgram",
                              "playht"
                            ],
                            "description": "Fournisseur de la voix"
                          },
                          "voiceId": {
                            "type": "string",
                            "description": "ID de la voix"
                          },
                          "cachingEnabled": {
                            "type": "boolean",
                            "description": "Cache activé pour la voix"
                          }
                        }
                      }
                    ]
                  },
                  "transcriber": {
                    "type": "object",
                    "required": [
                      "provider"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "deepgram",
                          "assembly-ai",
                          "google",
                          "azure",
                          "custom-transcriber"
                        ],
                        "description": "Fournisseur de transcription"
                      },
                      "model": {
                        "type": "string",
                        "description": "Modèle de transcription"
                      },
                      "language": {
                        "type": "string",
                        "description": "Langue de transcription (ex. \"fr-FR\")"
                      },
                      "confidenceThreshold": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Seuil de confiance"
                      },
                      "server": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "secret": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "firstMessage": {
                    "type": "string"
                  },
                  "firstMessageInterruptionsEnabled": {
                    "type": "boolean"
                  },
                  "firstMessageMode": {
                    "type": "string",
                    "enum": [
                      "assistant-speaks-first",
                      "assistant-waits-for-user"
                    ]
                  },
                  "endCallMessage": {
                    "type": "string"
                  },
                  "endCallPhrases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "voicemailMessage": {
                    "type": "string"
                  },
                  "voicemailDetection": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "twilio",
                          "google"
                        ]
                      }
                    }
                  },
                  "tools": {
                    "type": "object",
                    "properties": {
                      "functions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "knowledgeBases": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  },
                  "clientMessages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serverMessages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "forwardingPhoneNumber": {
                    "type": "string",
                    "pattern": "^\\+[1-9]\\d{1,14}$"
                  },
                  "silenceTimeoutSeconds": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 600
                  },
                  "maxDurationSeconds": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 3600
                  },
                  "endCallAfterSilence": {
                    "type": "boolean"
                  },
                  "backgroundSound": {
                    "type": "string",
                    "enum": [
                      "off",
                      "office"
                    ]
                  },
                  "backgroundDenoisingEnabled": {
                    "type": "boolean"
                  },
                  "modelOutputInMessagesEnabled": {
                    "type": "boolean"
                  },
                  "artifactPlan": {
                    "type": "object",
                    "properties": {
                      "recordingEnabled": {
                        "type": "boolean"
                      },
                      "recordingFormat": {
                        "type": "string"
                      },
                      "videoRecordingEnabled": {
                        "type": "boolean"
                      },
                      "pcapEnabled": {
                        "type": "boolean"
                      },
                      "pcapS3PathPrefix": {
                        "type": "string"
                      },
                      "transcriptPlan": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "startSpeakingPlan": {
                    "type": "object",
                    "properties": {
                      "waitSeconds": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  },
                  "stopSpeakingPlan": {
                    "type": "object",
                    "properties": {
                      "numWords": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "voiceSeconds": {
                        "type": "number",
                        "minimum": 0
                      },
                      "backoffSeconds": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  },
                  "monitorPlan": {
                    "type": "object",
                    "properties": {
                      "listenEnabled": {
                        "type": "boolean"
                      },
                      "listenAuthenticationEnabled": {
                        "type": "boolean"
                      },
                      "controlEnabled": {
                        "type": "boolean"
                      },
                      "controlAuthenticationEnabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "analysisPlan": {
                    "type": "object",
                    "properties": {
                      "summaryPrompt": {
                        "type": "string"
                      },
                      "structuredDataPrompt": {
                        "type": "string"
                      },
                      "structuredDataSchema": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "successEvaluationPrompt": {
                        "type": "string"
                      },
                      "successEvaluationRubric": {
                        "type": "string"
                      }
                    }
                  },
                  "observabilityPlan": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "langfuse"
                        ]
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transportConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "provider"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": [
                            "twilio",
                            "vonage",
                            "telnyx"
                          ]
                        },
                        "timeout": {
                          "type": "number",
                          "minimum": 1
                        },
                        "record": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "credentials": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "provider"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "apiKey": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "credentialIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "hooks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "on",
                        "do"
                      ],
                      "properties": {
                        "on": {
                          "type": "string",
                          "description": "Événement déclencheur (ex. \"call.ending\")"
                        },
                        "do": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                              }
                            },
                            "additionalProperties": true
                          }
                        }
                      }
                    }
                  },
                  "variableValues": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "server": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timeoutSeconds": {
                        "type": "number",
                        "minimum": 1
                      },
                      "backoffPlan": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "maxRetries": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "baseDelaySeconds": {
                            "type": "number",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assistant mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de l'assistant"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "Nom de l'assistant"
                        },
                        "model": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "model"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "openai",
                                    "anthropic",
                                    "groq",
                                    "azure"
                                  ],
                                  "description": "Fournisseur du modèle"
                                },
                                "model": {
                                  "type": "string",
                                  "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                                },
                                "systemPrompt": {
                                  "type": "string",
                                  "description": "Prompt système"
                                },
                                "temperature": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 2,
                                  "description": "Température du modèle"
                                },
                                "topP": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "description": "Top-p du modèle"
                                },
                                "maxTokens": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "description": "Nombre maximum de tokens"
                                }
                              }
                            }
                          ]
                        },
                        "voice": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "ID simple de la voix"
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider",
                                "voiceId"
                              ],
                              "properties": {
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "elevenlabs",
                                    "azure",
                                    "openai",
                                    "deepgram",
                                    "playht"
                                  ],
                                  "description": "Fournisseur de la voix"
                                },
                                "voiceId": {
                                  "type": "string",
                                  "description": "ID de la voix"
                                },
                                "cachingEnabled": {
                                  "type": "boolean",
                                  "description": "Cache activé pour la voix"
                                }
                              }
                            }
                          ]
                        },
                        "transcriber": {
                          "type": "object",
                          "required": [
                            "provider"
                          ],
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "deepgram",
                                "assembly-ai",
                                "google",
                                "azure",
                                "custom-transcriber"
                              ],
                              "description": "Fournisseur de transcription"
                            },
                            "model": {
                              "type": "string",
                              "description": "Modèle de transcription"
                            },
                            "language": {
                              "type": "string",
                              "description": "Langue de transcription (ex. \"fr-FR\")"
                            },
                            "confidenceThreshold": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1,
                              "description": "Seuil de confiance"
                            },
                            "server": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "secret": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "firstMessage": {
                          "type": "string",
                          "description": "Premier message de l'assistant"
                        },
                        "firstMessageInterruptionsEnabled": {
                          "type": "boolean",
                          "description": "Permet les interruptions du premier message"
                        },
                        "firstMessageMode": {
                          "type": "string",
                          "enum": [
                            "assistant-speaks-first",
                            "assistant-waits-for-user"
                          ],
                          "description": "Mode du premier message"
                        },
                        "endCallMessage": {
                          "type": "string",
                          "description": "Message de fin d'appel"
                        },
                        "endCallPhrases": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Phrases qui déclenchent la fin d'appel"
                        },
                        "voicemailMessage": {
                          "type": "string",
                          "description": "Message de répondeur"
                        },
                        "voicemailDetection": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "twilio",
                                "google"
                              ]
                            }
                          }
                        },
                        "tools": {
                          "type": "object",
                          "properties": {
                            "functions": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "knowledgeBases": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "workflows": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          }
                        },
                        "clientMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "serverMessages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "forwardingPhoneNumber": {
                          "type": "string",
                          "pattern": "^\\+[1-9]\\d{1,14}$",
                          "description": "Numéro de téléphone de transfert (format E.164)"
                        },
                        "silenceTimeoutSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 600,
                          "description": "Timeout de silence en secondes"
                        },
                        "maxDurationSeconds": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 3600,
                          "description": "Durée maximale d'appel en secondes"
                        },
                        "endCallAfterSilence": {
                          "type": "boolean",
                          "description": "Terminer l'appel après silence"
                        },
                        "backgroundSound": {
                          "type": "string",
                          "enum": [
                            "off",
                            "office"
                          ],
                          "description": "Son de fond"
                        },
                        "backgroundDenoisingEnabled": {
                          "type": "boolean",
                          "description": "Réduction de bruit activée"
                        },
                        "modelOutputInMessagesEnabled": {
                          "type": "boolean",
                          "description": "Sortie du modèle dans les messages"
                        },
                        "artifactPlan": {
                          "type": "object",
                          "properties": {
                            "recordingEnabled": {
                              "type": "boolean"
                            },
                            "recordingFormat": {
                              "type": "string"
                            },
                            "videoRecordingEnabled": {
                              "type": "boolean"
                            },
                            "pcapEnabled": {
                              "type": "boolean"
                            },
                            "pcapS3PathPrefix": {
                              "type": "string"
                            },
                            "transcriptPlan": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "startSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "waitSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "stopSpeakingPlan": {
                          "type": "object",
                          "properties": {
                            "numWords": {
                              "type": "integer",
                              "minimum": 1
                            },
                            "voiceSeconds": {
                              "type": "number",
                              "minimum": 0
                            },
                            "backoffSeconds": {
                              "type": "number",
                              "minimum": 0
                            }
                          }
                        },
                        "monitorPlan": {
                          "type": "object",
                          "properties": {
                            "listenEnabled": {
                              "type": "boolean"
                            },
                            "listenAuthenticationEnabled": {
                              "type": "boolean"
                            },
                            "controlEnabled": {
                              "type": "boolean"
                            },
                            "controlAuthenticationEnabled": {
                              "type": "boolean"
                            }
                          }
                        },
                        "analysisPlan": {
                          "type": "object",
                          "properties": {
                            "summaryPrompt": {
                              "type": "string"
                            },
                            "structuredDataPrompt": {
                              "type": "string"
                            },
                            "structuredDataSchema": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "successEvaluationPrompt": {
                              "type": "string"
                            },
                            "successEvaluationRubric": {
                              "type": "string"
                            }
                          }
                        },
                        "observabilityPlan": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "enum": [
                                "langfuse"
                              ]
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "transportConfigurations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "twilio",
                                  "vonage",
                                  "telnyx"
                                ]
                              },
                              "timeout": {
                                "type": "number",
                                "minimum": 1
                              },
                              "record": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "credentials": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "credentialIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "hooks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "on",
                              "do"
                            ],
                            "properties": {
                              "on": {
                                "type": "string",
                                "description": "Événement déclencheur (ex. \"call.ending\")"
                              },
                              "do": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              }
                            }
                          }
                        },
                        "variableValues": {
                          "type": "object",
                          "additionalProperties": true
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "timeoutSeconds": {
                              "type": "number",
                              "minimum": 1
                            },
                            "backoffPlan": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "maxRetries": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "baseDelaySeconds": {
                                  "type": "number",
                                  "minimum": 0
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer un assistant",
        "description": "Supprime un assistant existant",
        "operationId": "deleteAssistant",
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'assistant",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant supprimé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/knowledge-bases": {
      "get": {
        "summary": "Lister les bases de connaissances",
        "description": "Récupère la liste paginée des bases de connaissances",
        "operationId": "listKnowledgeBases",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de page (commence à 1)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des bases de connaissances récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Identifiant unique de la base de connaissances"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 100,
                            "description": "Nom de la base de connaissances"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 500,
                            "description": "Description de la base de connaissances"
                          },
                          "model": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string",
                                "description": "Fournisseur du modèle d'embedding"
                              },
                              "model": {
                                "type": "string",
                                "description": "Nom du modèle d'embedding"
                              },
                              "dimensions": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Dimensions du vecteur d'embedding"
                              }
                            }
                          },
                          "files": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "description": "IDs des fichiers associés"
                          },
                          "file_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Nombre de fichiers associés"
                          },
                          "chunks_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Nombre de chunks extraits"
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Métadonnées personnalisées"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date de création"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date de dernière modification"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "required": [
                        "page",
                        "limit",
                        "total",
                        "has_more"
                      ],
                      "properties": {
                        "page": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Page actuelle"
                        },
                        "limit": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Nombre d'éléments par page"
                        },
                        "total": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre total d'éléments"
                        },
                        "has_more": {
                          "type": "boolean",
                          "description": "Indique s'il y a plus de pages"
                        }
                      }
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une base de connaissances",
        "description": "Crée une nouvelle base de connaissances",
        "operationId": "createKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100,
                    "description": "Nom de la base de connaissances"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Description de la base de connaissances"
                  },
                  "model": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "description": "Fournisseur du modèle d'embedding"
                      },
                      "model": {
                        "type": "string",
                        "description": "Nom du modèle d'embedding"
                      },
                      "dimensions": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Dimensions du vecteur d'embedding"
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Métadonnées personnalisées"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Base de connaissances créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de la base de connaissances"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 100,
                          "description": "Nom de la base de connaissances"
                        },
                        "description": {
                          "type": "string",
                          "maxLength": 500,
                          "description": "Description de la base de connaissances"
                        },
                        "model": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "description": "Fournisseur du modèle d'embedding"
                            },
                            "model": {
                              "type": "string",
                              "description": "Nom du modèle d'embedding"
                            },
                            "dimensions": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Dimensions du vecteur d'embedding"
                            }
                          }
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "description": "IDs des fichiers associés"
                        },
                        "file_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de fichiers associés"
                        },
                        "chunks_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de chunks extraits"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/knowledge-bases/{id}": {
      "get": {
        "summary": "Récupérer une base de connaissances",
        "description": "Récupère une base de connaissances par son ID",
        "operationId": "getKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base de connaissances récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de la base de connaissances"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 100,
                          "description": "Nom de la base de connaissances"
                        },
                        "description": {
                          "type": "string",
                          "maxLength": 500,
                          "description": "Description de la base de connaissances"
                        },
                        "model": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "description": "Fournisseur du modèle d'embedding"
                            },
                            "model": {
                              "type": "string",
                              "description": "Nom du modèle d'embedding"
                            },
                            "dimensions": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Dimensions du vecteur d'embedding"
                            }
                          }
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "description": "IDs des fichiers associés"
                        },
                        "file_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de fichiers associés"
                        },
                        "chunks_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de chunks extraits"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Mettre à jour une base de connaissances",
        "description": "Met à jour une base de connaissances existante",
        "operationId": "updateKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "model": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "dimensions": {
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Base de connaissances mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Identifiant unique de la base de connaissances"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 100,
                          "description": "Nom de la base de connaissances"
                        },
                        "description": {
                          "type": "string",
                          "maxLength": 500,
                          "description": "Description de la base de connaissances"
                        },
                        "model": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string",
                              "description": "Fournisseur du modèle d'embedding"
                            },
                            "model": {
                              "type": "string",
                              "description": "Nom du modèle d'embedding"
                            },
                            "dimensions": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Dimensions du vecteur d'embedding"
                            }
                          }
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "description": "IDs des fichiers associés"
                        },
                        "file_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de fichiers associés"
                        },
                        "chunks_count": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Nombre de chunks extraits"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Métadonnées personnalisées"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de création"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date de dernière modification"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer une base de connaissances",
        "description": "Supprime une base de connaissances existante",
        "operationId": "deleteKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base de connaissances supprimée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/knowledge-bases/{id}/query": {
      "post": {
        "summary": "Interroger une base de connaissances",
        "description": "Effectue une recherche sémantique dans une base de connaissances",
        "operationId": "queryKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "query"
                ],
                "properties": {
                  "query": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Question à poser à la base de connaissances"
                  },
                  "top_k": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 5,
                    "description": "Nombre de résultats à retourner"
                  },
                  "similarity_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "default": 0.7,
                    "description": "Seuil de similarité"
                  },
                  "metadata_filter": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Filtres sur les métadonnées"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recherche effectuée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "matches"
                      ],
                      "properties": {
                        "matches": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "text",
                              "score"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Texte trouvé"
                              },
                              "score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Score de similarité"
                              },
                              "metadata": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "Métadonnées du chunk"
                              },
                              "source": {
                                "type": "string",
                                "description": "Source du texte"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/knowledge-bases/{id}/files": {
      "post": {
        "summary": "Ajouter un fichier à une base de connaissances",
        "description": "Ajoute un fichier existant à une base de connaissances",
        "operationId": "addFileToKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "file_id"
                ],
                "properties": {
                  "file_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID du fichier à ajouter"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fichier ajouté avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation des données",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Données invalides",
                  "details": {
                    "field": "name",
                    "error": "Le nom est requis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    },
    "/knowledge-bases/{id}/files/{fileId}": {
      "delete": {
        "summary": "Retirer un fichier d'une base de connaissances",
        "description": "Retire un fichier d'une base de connaissances",
        "operationId": "removeFileFromKnowledgeBase",
        "tags": [
          "Knowledge Bases"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la base de connaissances",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "description": "ID du fichier à retirer",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier retiré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token d'authentification manquant ou invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification requis"
                }
              }
            }
          },
          "404": {
            "description": "Ressource non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Ressource non trouvée"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Erreur interne du serveur"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT Supabase pour l'authentification"
      }
    },
    "schemas": {
      "Assistant": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifiant unique de l'assistant"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Nom de l'assistant"
          },
          "model": {
            "oneOf": [
              {
                "type": "string",
                "description": "Nom simple du modèle (ex. \"gpt-4o\")"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "model"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "openai",
                      "anthropic",
                      "groq",
                      "azure"
                    ],
                    "description": "Fournisseur du modèle"
                  },
                  "model": {
                    "type": "string",
                    "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                  },
                  "systemPrompt": {
                    "type": "string",
                    "description": "Prompt système"
                  },
                  "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "Température du modèle"
                  },
                  "topP": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Top-p du modèle"
                  },
                  "maxTokens": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Nombre maximum de tokens"
                  }
                }
              }
            ]
          },
          "voice": {
            "oneOf": [
              {
                "type": "string",
                "description": "ID simple de la voix"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "voiceId"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "elevenlabs",
                      "azure",
                      "openai",
                      "deepgram",
                      "playht"
                    ],
                    "description": "Fournisseur de la voix"
                  },
                  "voiceId": {
                    "type": "string",
                    "description": "ID de la voix"
                  },
                  "cachingEnabled": {
                    "type": "boolean",
                    "description": "Cache activé pour la voix"
                  }
                }
              }
            ]
          },
          "transcriber": {
            "type": "object",
            "required": [
              "provider"
            ],
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "deepgram",
                  "assembly-ai",
                  "google",
                  "azure",
                  "custom-transcriber"
                ],
                "description": "Fournisseur de transcription"
              },
              "model": {
                "type": "string",
                "description": "Modèle de transcription"
              },
              "language": {
                "type": "string",
                "description": "Langue de transcription (ex. \"fr-FR\")"
              },
              "confidenceThreshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Seuil de confiance"
              },
              "server": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "secret": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "firstMessage": {
            "type": "string",
            "description": "Premier message de l'assistant"
          },
          "firstMessageInterruptionsEnabled": {
            "type": "boolean",
            "description": "Permet les interruptions du premier message"
          },
          "firstMessageMode": {
            "type": "string",
            "enum": [
              "assistant-speaks-first",
              "assistant-waits-for-user"
            ],
            "description": "Mode du premier message"
          },
          "endCallMessage": {
            "type": "string",
            "description": "Message de fin d'appel"
          },
          "endCallPhrases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Phrases qui déclenchent la fin d'appel"
          },
          "voicemailMessage": {
            "type": "string",
            "description": "Message de répondeur"
          },
          "voicemailDetection": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "twilio",
                  "google"
                ]
              }
            }
          },
          "tools": {
            "type": "object",
            "properties": {
              "functions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "knowledgeBases": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "workflows": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "clientMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serverMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "description": "Numéro de téléphone de transfert (format E.164)"
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 600,
            "description": "Timeout de silence en secondes"
          },
          "maxDurationSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 3600,
            "description": "Durée maximale d'appel en secondes"
          },
          "endCallAfterSilence": {
            "type": "boolean",
            "description": "Terminer l'appel après silence"
          },
          "backgroundSound": {
            "type": "string",
            "enum": [
              "off",
              "office"
            ],
            "description": "Son de fond"
          },
          "backgroundDenoisingEnabled": {
            "type": "boolean",
            "description": "Réduction de bruit activée"
          },
          "modelOutputInMessagesEnabled": {
            "type": "boolean",
            "description": "Sortie du modèle dans les messages"
          },
          "artifactPlan": {
            "type": "object",
            "properties": {
              "recordingEnabled": {
                "type": "boolean"
              },
              "recordingFormat": {
                "type": "string"
              },
              "videoRecordingEnabled": {
                "type": "boolean"
              },
              "pcapEnabled": {
                "type": "boolean"
              },
              "pcapS3PathPrefix": {
                "type": "string"
              },
              "transcriptPlan": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "startSpeakingPlan": {
            "type": "object",
            "properties": {
              "waitSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "stopSpeakingPlan": {
            "type": "object",
            "properties": {
              "numWords": {
                "type": "integer",
                "minimum": 1
              },
              "voiceSeconds": {
                "type": "number",
                "minimum": 0
              },
              "backoffSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "monitorPlan": {
            "type": "object",
            "properties": {
              "listenEnabled": {
                "type": "boolean"
              },
              "listenAuthenticationEnabled": {
                "type": "boolean"
              },
              "controlEnabled": {
                "type": "boolean"
              },
              "controlAuthenticationEnabled": {
                "type": "boolean"
              }
            }
          },
          "analysisPlan": {
            "type": "object",
            "properties": {
              "summaryPrompt": {
                "type": "string"
              },
              "structuredDataPrompt": {
                "type": "string"
              },
              "structuredDataSchema": {
                "type": "object",
                "additionalProperties": true
              },
              "successEvaluationPrompt": {
                "type": "string"
              },
              "successEvaluationRubric": {
                "type": "string"
              }
            }
          },
          "observabilityPlan": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "langfuse"
                ]
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "transportConfigurations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": [
                    "twilio",
                    "vonage",
                    "telnyx"
                  ]
                },
                "timeout": {
                  "type": "number",
                  "minimum": 1
                },
                "record": {
                  "type": "boolean"
                }
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string"
                },
                "apiKey": {
                  "type": "string"
                }
              }
            }
          },
          "credentialIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "hooks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "on",
                "do"
              ],
              "properties": {
                "on": {
                  "type": "string",
                  "description": "Événement déclencheur (ex. \"call.ending\")"
                },
                "do": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                      }
                    },
                    "additionalProperties": true
                  }
                }
              }
            }
          },
          "variableValues": {
            "type": "object",
            "additionalProperties": true
          },
          "server": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "timeoutSeconds": {
                "type": "number",
                "minimum": 1
              },
              "backoffPlan": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "maxRetries": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "baseDelaySeconds": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "Métadonnées personnalisées"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date de création"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date de dernière modification"
          }
        }
      },
      "VapiModel": {
        "type": "object",
        "required": [
          "provider",
          "model"
        ],
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openai",
              "anthropic",
              "groq",
              "azure"
            ],
            "description": "Fournisseur du modèle"
          },
          "model": {
            "type": "string",
            "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
          },
          "systemPrompt": {
            "type": "string",
            "description": "Prompt système"
          },
          "temperature": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "Température du modèle"
          },
          "topP": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Top-p du modèle"
          },
          "maxTokens": {
            "type": "integer",
            "minimum": 1,
            "description": "Nombre maximum de tokens"
          }
        }
      },
      "VapiVoice": {
        "type": "object",
        "required": [
          "provider",
          "voiceId"
        ],
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "elevenlabs",
              "azure",
              "openai",
              "deepgram",
              "playht"
            ],
            "description": "Fournisseur de la voix"
          },
          "voiceId": {
            "type": "string",
            "description": "ID de la voix"
          },
          "cachingEnabled": {
            "type": "boolean",
            "description": "Cache activé pour la voix"
          }
        }
      },
      "VapiTranscriber": {
        "type": "object",
        "required": [
          "provider"
        ],
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepgram",
              "assembly-ai",
              "google",
              "azure",
              "custom-transcriber"
            ],
            "description": "Fournisseur de transcription"
          },
          "model": {
            "type": "string",
            "description": "Modèle de transcription"
          },
          "language": {
            "type": "string",
            "description": "Langue de transcription (ex. \"fr-FR\")"
          },
          "confidenceThreshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Seuil de confiance"
          },
          "server": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "secret": {
                "type": "string"
              }
            }
          }
        }
      },
      "ArtifactPlan": {
        "type": "object",
        "properties": {
          "recordingEnabled": {
            "type": "boolean"
          },
          "recordingFormat": {
            "type": "string"
          },
          "videoRecordingEnabled": {
            "type": "boolean"
          },
          "pcapEnabled": {
            "type": "boolean"
          },
          "pcapS3PathPrefix": {
            "type": "string"
          },
          "transcriptPlan": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "StartSpeakingPlan": {
        "type": "object",
        "properties": {
          "waitSeconds": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "StopSpeakingPlan": {
        "type": "object",
        "properties": {
          "numWords": {
            "type": "integer",
            "minimum": 1
          },
          "voiceSeconds": {
            "type": "number",
            "minimum": 0
          },
          "backoffSeconds": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "MonitorPlan": {
        "type": "object",
        "properties": {
          "listenEnabled": {
            "type": "boolean"
          },
          "listenAuthenticationEnabled": {
            "type": "boolean"
          },
          "controlEnabled": {
            "type": "boolean"
          },
          "controlAuthenticationEnabled": {
            "type": "boolean"
          }
        }
      },
      "AnalysisPlan": {
        "type": "object",
        "properties": {
          "summaryPrompt": {
            "type": "string"
          },
          "structuredDataPrompt": {
            "type": "string"
          },
          "structuredDataSchema": {
            "type": "object",
            "additionalProperties": true
          },
          "successEvaluationPrompt": {
            "type": "string"
          },
          "successEvaluationRubric": {
            "type": "string"
          }
        }
      },
      "ObservabilityPlan": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "langfuse"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TransportConfiguration": {
        "type": "object",
        "required": [
          "provider"
        ],
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "twilio",
              "vonage",
              "telnyx"
            ]
          },
          "timeout": {
            "type": "number",
            "minimum": 1
          },
          "record": {
            "type": "boolean"
          }
        }
      },
      "Credential": {
        "type": "object",
        "required": [
          "provider"
        ],
        "properties": {
          "provider": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          }
        }
      },
      "Hook": {
        "type": "object",
        "required": [
          "on",
          "do"
        ],
        "properties": {
          "on": {
            "type": "string",
            "description": "Événement déclencheur (ex. \"call.ending\")"
          },
          "do": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "ServerConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "timeoutSeconds": {
            "type": "number",
            "minimum": 1
          },
          "backoffPlan": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "maxRetries": {
                "type": "integer",
                "minimum": 0
              },
              "baseDelaySeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          }
        }
      },
      "KnowledgeBase": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifiant unique de la base de connaissances"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100,
            "description": "Nom de la base de connaissances"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Description de la base de connaissances"
          },
          "model": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "Fournisseur du modèle d'embedding"
              },
              "model": {
                "type": "string",
                "description": "Nom du modèle d'embedding"
              },
              "dimensions": {
                "type": "integer",
                "minimum": 1,
                "description": "Dimensions du vecteur d'embedding"
              }
            }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "IDs des fichiers associés"
          },
          "file_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Nombre de fichiers associés"
          },
          "chunks_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Nombre de chunks extraits"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "Métadonnées personnalisées"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date de création"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date de dernière modification"
          }
        }
      },
      "AssistantCreateRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Nom de l'assistant"
          },
          "model": {
            "oneOf": [
              {
                "type": "string",
                "description": "Nom simple du modèle"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "model"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "openai",
                      "anthropic",
                      "groq",
                      "azure"
                    ],
                    "description": "Fournisseur du modèle"
                  },
                  "model": {
                    "type": "string",
                    "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                  },
                  "systemPrompt": {
                    "type": "string",
                    "description": "Prompt système"
                  },
                  "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "Température du modèle"
                  },
                  "topP": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Top-p du modèle"
                  },
                  "maxTokens": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Nombre maximum de tokens"
                  }
                }
              }
            ]
          },
          "voice": {
            "oneOf": [
              {
                "type": "string",
                "description": "ID simple de la voix"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "voiceId"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "elevenlabs",
                      "azure",
                      "openai",
                      "deepgram",
                      "playht"
                    ],
                    "description": "Fournisseur de la voix"
                  },
                  "voiceId": {
                    "type": "string",
                    "description": "ID de la voix"
                  },
                  "cachingEnabled": {
                    "type": "boolean",
                    "description": "Cache activé pour la voix"
                  }
                }
              }
            ]
          },
          "transcriber": {
            "type": "object",
            "required": [
              "provider"
            ],
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "deepgram",
                  "assembly-ai",
                  "google",
                  "azure",
                  "custom-transcriber"
                ],
                "description": "Fournisseur de transcription"
              },
              "model": {
                "type": "string",
                "description": "Modèle de transcription"
              },
              "language": {
                "type": "string",
                "description": "Langue de transcription (ex. \"fr-FR\")"
              },
              "confidenceThreshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Seuil de confiance"
              },
              "server": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "secret": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "firstMessage": {
            "type": "string"
          },
          "firstMessageInterruptionsEnabled": {
            "type": "boolean"
          },
          "firstMessageMode": {
            "type": "string",
            "enum": [
              "assistant-speaks-first",
              "assistant-waits-for-user"
            ]
          },
          "endCallMessage": {
            "type": "string"
          },
          "endCallPhrases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "voicemailMessage": {
            "type": "string"
          },
          "voicemailDetection": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "twilio",
                  "google"
                ]
              }
            }
          },
          "tools": {
            "type": "object",
            "properties": {
              "functions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "knowledgeBases": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "workflows": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "clientMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serverMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$"
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 600
          },
          "maxDurationSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 3600
          },
          "endCallAfterSilence": {
            "type": "boolean"
          },
          "backgroundSound": {
            "type": "string",
            "enum": [
              "off",
              "office"
            ]
          },
          "backgroundDenoisingEnabled": {
            "type": "boolean"
          },
          "modelOutputInMessagesEnabled": {
            "type": "boolean"
          },
          "artifactPlan": {
            "type": "object",
            "properties": {
              "recordingEnabled": {
                "type": "boolean"
              },
              "recordingFormat": {
                "type": "string"
              },
              "videoRecordingEnabled": {
                "type": "boolean"
              },
              "pcapEnabled": {
                "type": "boolean"
              },
              "pcapS3PathPrefix": {
                "type": "string"
              },
              "transcriptPlan": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "startSpeakingPlan": {
            "type": "object",
            "properties": {
              "waitSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "stopSpeakingPlan": {
            "type": "object",
            "properties": {
              "numWords": {
                "type": "integer",
                "minimum": 1
              },
              "voiceSeconds": {
                "type": "number",
                "minimum": 0
              },
              "backoffSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "monitorPlan": {
            "type": "object",
            "properties": {
              "listenEnabled": {
                "type": "boolean"
              },
              "listenAuthenticationEnabled": {
                "type": "boolean"
              },
              "controlEnabled": {
                "type": "boolean"
              },
              "controlAuthenticationEnabled": {
                "type": "boolean"
              }
            }
          },
          "analysisPlan": {
            "type": "object",
            "properties": {
              "summaryPrompt": {
                "type": "string"
              },
              "structuredDataPrompt": {
                "type": "string"
              },
              "structuredDataSchema": {
                "type": "object",
                "additionalProperties": true
              },
              "successEvaluationPrompt": {
                "type": "string"
              },
              "successEvaluationRubric": {
                "type": "string"
              }
            }
          },
          "observabilityPlan": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "langfuse"
                ]
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "transportConfigurations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": [
                    "twilio",
                    "vonage",
                    "telnyx"
                  ]
                },
                "timeout": {
                  "type": "number",
                  "minimum": 1
                },
                "record": {
                  "type": "boolean"
                }
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string"
                },
                "apiKey": {
                  "type": "string"
                }
              }
            }
          },
          "credentialIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "hooks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "on",
                "do"
              ],
              "properties": {
                "on": {
                  "type": "string",
                  "description": "Événement déclencheur (ex. \"call.ending\")"
                },
                "do": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                      }
                    },
                    "additionalProperties": true
                  }
                }
              }
            }
          },
          "variableValues": {
            "type": "object",
            "additionalProperties": true
          },
          "server": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "timeoutSeconds": {
                "type": "number",
                "minimum": 1
              },
              "backoffPlan": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "maxRetries": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "baseDelaySeconds": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "AssistantUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "model": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "model"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "openai",
                      "anthropic",
                      "groq",
                      "azure"
                    ],
                    "description": "Fournisseur du modèle"
                  },
                  "model": {
                    "type": "string",
                    "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                  },
                  "systemPrompt": {
                    "type": "string",
                    "description": "Prompt système"
                  },
                  "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "Température du modèle"
                  },
                  "topP": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Top-p du modèle"
                  },
                  "maxTokens": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Nombre maximum de tokens"
                  }
                }
              }
            ]
          },
          "voice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "voiceId"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "elevenlabs",
                      "azure",
                      "openai",
                      "deepgram",
                      "playht"
                    ],
                    "description": "Fournisseur de la voix"
                  },
                  "voiceId": {
                    "type": "string",
                    "description": "ID de la voix"
                  },
                  "cachingEnabled": {
                    "type": "boolean",
                    "description": "Cache activé pour la voix"
                  }
                }
              }
            ]
          },
          "transcriber": {
            "type": "object",
            "required": [
              "provider"
            ],
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "deepgram",
                  "assembly-ai",
                  "google",
                  "azure",
                  "custom-transcriber"
                ],
                "description": "Fournisseur de transcription"
              },
              "model": {
                "type": "string",
                "description": "Modèle de transcription"
              },
              "language": {
                "type": "string",
                "description": "Langue de transcription (ex. \"fr-FR\")"
              },
              "confidenceThreshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Seuil de confiance"
              },
              "server": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "secret": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "firstMessage": {
            "type": "string"
          },
          "firstMessageInterruptionsEnabled": {
            "type": "boolean"
          },
          "firstMessageMode": {
            "type": "string",
            "enum": [
              "assistant-speaks-first",
              "assistant-waits-for-user"
            ]
          },
          "endCallMessage": {
            "type": "string"
          },
          "endCallPhrases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "voicemailMessage": {
            "type": "string"
          },
          "voicemailDetection": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "twilio",
                  "google"
                ]
              }
            }
          },
          "tools": {
            "type": "object",
            "properties": {
              "functions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "knowledgeBases": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "workflows": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "clientMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serverMessages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$"
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 600
          },
          "maxDurationSeconds": {
            "type": "number",
            "minimum": 1,
            "maximum": 3600
          },
          "endCallAfterSilence": {
            "type": "boolean"
          },
          "backgroundSound": {
            "type": "string",
            "enum": [
              "off",
              "office"
            ]
          },
          "backgroundDenoisingEnabled": {
            "type": "boolean"
          },
          "modelOutputInMessagesEnabled": {
            "type": "boolean"
          },
          "artifactPlan": {
            "type": "object",
            "properties": {
              "recordingEnabled": {
                "type": "boolean"
              },
              "recordingFormat": {
                "type": "string"
              },
              "videoRecordingEnabled": {
                "type": "boolean"
              },
              "pcapEnabled": {
                "type": "boolean"
              },
              "pcapS3PathPrefix": {
                "type": "string"
              },
              "transcriptPlan": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "startSpeakingPlan": {
            "type": "object",
            "properties": {
              "waitSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "stopSpeakingPlan": {
            "type": "object",
            "properties": {
              "numWords": {
                "type": "integer",
                "minimum": 1
              },
              "voiceSeconds": {
                "type": "number",
                "minimum": 0
              },
              "backoffSeconds": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "monitorPlan": {
            "type": "object",
            "properties": {
              "listenEnabled": {
                "type": "boolean"
              },
              "listenAuthenticationEnabled": {
                "type": "boolean"
              },
              "controlEnabled": {
                "type": "boolean"
              },
              "controlAuthenticationEnabled": {
                "type": "boolean"
              }
            }
          },
          "analysisPlan": {
            "type": "object",
            "properties": {
              "summaryPrompt": {
                "type": "string"
              },
              "structuredDataPrompt": {
                "type": "string"
              },
              "structuredDataSchema": {
                "type": "object",
                "additionalProperties": true
              },
              "successEvaluationPrompt": {
                "type": "string"
              },
              "successEvaluationRubric": {
                "type": "string"
              }
            }
          },
          "observabilityPlan": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "langfuse"
                ]
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "transportConfigurations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": [
                    "twilio",
                    "vonage",
                    "telnyx"
                  ]
                },
                "timeout": {
                  "type": "number",
                  "minimum": 1
                },
                "record": {
                  "type": "boolean"
                }
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string"
                },
                "apiKey": {
                  "type": "string"
                }
              }
            }
          },
          "credentialIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "hooks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "on",
                "do"
              ],
              "properties": {
                "on": {
                  "type": "string",
                  "description": "Événement déclencheur (ex. \"call.ending\")"
                },
                "do": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                      }
                    },
                    "additionalProperties": true
                  }
                }
              }
            }
          },
          "variableValues": {
            "type": "object",
            "additionalProperties": true
          },
          "server": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "timeoutSeconds": {
                "type": "number",
                "minimum": 1
              },
              "backoffPlan": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "maxRetries": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "baseDelaySeconds": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "KnowledgeBaseCreateRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100,
            "description": "Nom de la base de connaissances"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Description de la base de connaissances"
          },
          "model": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "Fournisseur du modèle d'embedding"
              },
              "model": {
                "type": "string",
                "description": "Nom du modèle d'embedding"
              },
              "dimensions": {
                "type": "integer",
                "minimum": 1,
                "description": "Dimensions du vecteur d'embedding"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "Métadonnées personnalisées"
          }
        }
      },
      "KnowledgeBaseUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "model": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "dimensions": {
                "type": "integer",
                "minimum": 1
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "KnowledgeBaseQueryRequest": {
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "type": "string",
            "minLength": 1,
            "description": "Question à poser à la base de connaissances"
          },
          "top_k": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 5,
            "description": "Nombre de résultats à retourner"
          },
          "similarity_threshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "default": 0.7,
            "description": "Seuil de similarité"
          },
          "metadata_filter": {
            "type": "object",
            "additionalProperties": true,
            "description": "Filtres sur les métadonnées"
          }
        }
      },
      "AddFileRequest": {
        "type": "object",
        "required": [
          "file_id"
        ],
        "properties": {
          "file_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID du fichier à ajouter"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {}
          },
          "pagination": {
            "type": "object",
            "required": [
              "page",
              "limit",
              "total",
              "has_more"
            ],
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "description": "Page actuelle"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Nombre d'éléments par page"
              },
              "total": {
                "type": "integer",
                "minimum": 0,
                "description": "Nombre total d'éléments"
              },
              "has_more": {
                "type": "boolean",
                "description": "Indique s'il y a plus de pages"
              }
            }
          }
        }
      },
      "SingleResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {}
        }
      },
      "SuccessResponse": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "PaginatedAssistantsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Identifiant unique de l'assistant"
                },
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100,
                  "description": "Nom de l'assistant"
                },
                "model": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                    },
                    {
                      "type": "object",
                      "required": [
                        "provider",
                        "model"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": [
                            "openai",
                            "anthropic",
                            "groq",
                            "azure"
                          ],
                          "description": "Fournisseur du modèle"
                        },
                        "model": {
                          "type": "string",
                          "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "description": "Prompt système"
                        },
                        "temperature": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 2,
                          "description": "Température du modèle"
                        },
                        "topP": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 1,
                          "description": "Top-p du modèle"
                        },
                        "maxTokens": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Nombre maximum de tokens"
                        }
                      }
                    }
                  ]
                },
                "voice": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "ID simple de la voix"
                    },
                    {
                      "type": "object",
                      "required": [
                        "provider",
                        "voiceId"
                      ],
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": [
                            "elevenlabs",
                            "azure",
                            "openai",
                            "deepgram",
                            "playht"
                          ],
                          "description": "Fournisseur de la voix"
                        },
                        "voiceId": {
                          "type": "string",
                          "description": "ID de la voix"
                        },
                        "cachingEnabled": {
                          "type": "boolean",
                          "description": "Cache activé pour la voix"
                        }
                      }
                    }
                  ]
                },
                "transcriber": {
                  "type": "object",
                  "required": [
                    "provider"
                  ],
                  "properties": {
                    "provider": {
                      "type": "string",
                      "enum": [
                        "deepgram",
                        "assembly-ai",
                        "google",
                        "azure",
                        "custom-transcriber"
                      ],
                      "description": "Fournisseur de transcription"
                    },
                    "model": {
                      "type": "string",
                      "description": "Modèle de transcription"
                    },
                    "language": {
                      "type": "string",
                      "description": "Langue de transcription (ex. \"fr-FR\")"
                    },
                    "confidenceThreshold": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Seuil de confiance"
                    },
                    "server": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "secret": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "firstMessage": {
                  "type": "string",
                  "description": "Premier message de l'assistant"
                },
                "firstMessageInterruptionsEnabled": {
                  "type": "boolean",
                  "description": "Permet les interruptions du premier message"
                },
                "firstMessageMode": {
                  "type": "string",
                  "enum": [
                    "assistant-speaks-first",
                    "assistant-waits-for-user"
                  ],
                  "description": "Mode du premier message"
                },
                "endCallMessage": {
                  "type": "string",
                  "description": "Message de fin d'appel"
                },
                "endCallPhrases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Phrases qui déclenchent la fin d'appel"
                },
                "voicemailMessage": {
                  "type": "string",
                  "description": "Message de répondeur"
                },
                "voicemailDetection": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "enum": [
                        "twilio",
                        "google"
                      ]
                    }
                  }
                },
                "tools": {
                  "type": "object",
                  "properties": {
                    "functions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "knowledgeBases": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "workflows": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                },
                "clientMessages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "serverMessages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "forwardingPhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+[1-9]\\d{1,14}$",
                  "description": "Numéro de téléphone de transfert (format E.164)"
                },
                "silenceTimeoutSeconds": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 600,
                  "description": "Timeout de silence en secondes"
                },
                "maxDurationSeconds": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 3600,
                  "description": "Durée maximale d'appel en secondes"
                },
                "endCallAfterSilence": {
                  "type": "boolean",
                  "description": "Terminer l'appel après silence"
                },
                "backgroundSound": {
                  "type": "string",
                  "enum": [
                    "off",
                    "office"
                  ],
                  "description": "Son de fond"
                },
                "backgroundDenoisingEnabled": {
                  "type": "boolean",
                  "description": "Réduction de bruit activée"
                },
                "modelOutputInMessagesEnabled": {
                  "type": "boolean",
                  "description": "Sortie du modèle dans les messages"
                },
                "artifactPlan": {
                  "type": "object",
                  "properties": {
                    "recordingEnabled": {
                      "type": "boolean"
                    },
                    "recordingFormat": {
                      "type": "string"
                    },
                    "videoRecordingEnabled": {
                      "type": "boolean"
                    },
                    "pcapEnabled": {
                      "type": "boolean"
                    },
                    "pcapS3PathPrefix": {
                      "type": "string"
                    },
                    "transcriptPlan": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "startSpeakingPlan": {
                  "type": "object",
                  "properties": {
                    "waitSeconds": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                },
                "stopSpeakingPlan": {
                  "type": "object",
                  "properties": {
                    "numWords": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "voiceSeconds": {
                      "type": "number",
                      "minimum": 0
                    },
                    "backoffSeconds": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                },
                "monitorPlan": {
                  "type": "object",
                  "properties": {
                    "listenEnabled": {
                      "type": "boolean"
                    },
                    "listenAuthenticationEnabled": {
                      "type": "boolean"
                    },
                    "controlEnabled": {
                      "type": "boolean"
                    },
                    "controlAuthenticationEnabled": {
                      "type": "boolean"
                    }
                  }
                },
                "analysisPlan": {
                  "type": "object",
                  "properties": {
                    "summaryPrompt": {
                      "type": "string"
                    },
                    "structuredDataPrompt": {
                      "type": "string"
                    },
                    "structuredDataSchema": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "successEvaluationPrompt": {
                      "type": "string"
                    },
                    "successEvaluationRubric": {
                      "type": "string"
                    }
                  }
                },
                "observabilityPlan": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "enum": [
                        "langfuse"
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "transportConfigurations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "provider"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "twilio",
                          "vonage",
                          "telnyx"
                        ]
                      },
                      "timeout": {
                        "type": "number",
                        "minimum": 1
                      },
                      "record": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "credentials": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "provider"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "apiKey": {
                        "type": "string"
                      }
                    }
                  }
                },
                "credentialIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "hooks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "on",
                      "do"
                    ],
                    "properties": {
                      "on": {
                        "type": "string",
                        "description": "Événement déclencheur (ex. \"call.ending\")"
                      },
                      "do": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                            }
                          },
                          "additionalProperties": true
                        }
                      }
                    }
                  }
                },
                "variableValues": {
                  "type": "object",
                  "additionalProperties": true
                },
                "server": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "timeoutSeconds": {
                      "type": "number",
                      "minimum": 1
                    },
                    "backoffPlan": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "maxRetries": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "baseDelaySeconds": {
                          "type": "number",
                          "minimum": 0
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Métadonnées personnalisées"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date de création"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date de dernière modification"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "page",
              "limit",
              "total",
              "has_more"
            ],
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "description": "Page actuelle"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Nombre d'éléments par page"
              },
              "total": {
                "type": "integer",
                "minimum": 0,
                "description": "Nombre total d'éléments"
              },
              "has_more": {
                "type": "boolean",
                "description": "Indique s'il y a plus de pages"
              }
            }
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "SingleAssistantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Identifiant unique de l'assistant"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "Nom de l'assistant"
              },
              "model": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Nom simple du modèle (ex. \"gpt-4o\")"
                  },
                  {
                    "type": "object",
                    "required": [
                      "provider",
                      "model"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "openai",
                          "anthropic",
                          "groq",
                          "azure"
                        ],
                        "description": "Fournisseur du modèle"
                      },
                      "model": {
                        "type": "string",
                        "description": "Nom du modèle (ex. \"gpt-4o\", \"claude-3-opus-20240229\")"
                      },
                      "systemPrompt": {
                        "type": "string",
                        "description": "Prompt système"
                      },
                      "temperature": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 2,
                        "description": "Température du modèle"
                      },
                      "topP": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Top-p du modèle"
                      },
                      "maxTokens": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Nombre maximum de tokens"
                      }
                    }
                  }
                ]
              },
              "voice": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "ID simple de la voix"
                  },
                  {
                    "type": "object",
                    "required": [
                      "provider",
                      "voiceId"
                    ],
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "elevenlabs",
                          "azure",
                          "openai",
                          "deepgram",
                          "playht"
                        ],
                        "description": "Fournisseur de la voix"
                      },
                      "voiceId": {
                        "type": "string",
                        "description": "ID de la voix"
                      },
                      "cachingEnabled": {
                        "type": "boolean",
                        "description": "Cache activé pour la voix"
                      }
                    }
                  }
                ]
              },
              "transcriber": {
                "type": "object",
                "required": [
                  "provider"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "deepgram",
                      "assembly-ai",
                      "google",
                      "azure",
                      "custom-transcriber"
                    ],
                    "description": "Fournisseur de transcription"
                  },
                  "model": {
                    "type": "string",
                    "description": "Modèle de transcription"
                  },
                  "language": {
                    "type": "string",
                    "description": "Langue de transcription (ex. \"fr-FR\")"
                  },
                  "confidenceThreshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Seuil de confiance"
                  },
                  "server": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "secret": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "firstMessage": {
                "type": "string",
                "description": "Premier message de l'assistant"
              },
              "firstMessageInterruptionsEnabled": {
                "type": "boolean",
                "description": "Permet les interruptions du premier message"
              },
              "firstMessageMode": {
                "type": "string",
                "enum": [
                  "assistant-speaks-first",
                  "assistant-waits-for-user"
                ],
                "description": "Mode du premier message"
              },
              "endCallMessage": {
                "type": "string",
                "description": "Message de fin d'appel"
              },
              "endCallPhrases": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Phrases qui déclenchent la fin d'appel"
              },
              "voicemailMessage": {
                "type": "string",
                "description": "Message de répondeur"
              },
              "voicemailDetection": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "twilio",
                      "google"
                    ]
                  }
                }
              },
              "tools": {
                "type": "object",
                "properties": {
                  "functions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "knowledgeBases": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              },
              "clientMessages": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "serverMessages": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "forwardingPhoneNumber": {
                "type": "string",
                "pattern": "^\\+[1-9]\\d{1,14}$",
                "description": "Numéro de téléphone de transfert (format E.164)"
              },
              "silenceTimeoutSeconds": {
                "type": "number",
                "minimum": 1,
                "maximum": 600,
                "description": "Timeout de silence en secondes"
              },
              "maxDurationSeconds": {
                "type": "number",
                "minimum": 1,
                "maximum": 3600,
                "description": "Durée maximale d'appel en secondes"
              },
              "endCallAfterSilence": {
                "type": "boolean",
                "description": "Terminer l'appel après silence"
              },
              "backgroundSound": {
                "type": "string",
                "enum": [
                  "off",
                  "office"
                ],
                "description": "Son de fond"
              },
              "backgroundDenoisingEnabled": {
                "type": "boolean",
                "description": "Réduction de bruit activée"
              },
              "modelOutputInMessagesEnabled": {
                "type": "boolean",
                "description": "Sortie du modèle dans les messages"
              },
              "artifactPlan": {
                "type": "object",
                "properties": {
                  "recordingEnabled": {
                    "type": "boolean"
                  },
                  "recordingFormat": {
                    "type": "string"
                  },
                  "videoRecordingEnabled": {
                    "type": "boolean"
                  },
                  "pcapEnabled": {
                    "type": "boolean"
                  },
                  "pcapS3PathPrefix": {
                    "type": "string"
                  },
                  "transcriptPlan": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "startSpeakingPlan": {
                "type": "object",
                "properties": {
                  "waitSeconds": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              },
              "stopSpeakingPlan": {
                "type": "object",
                "properties": {
                  "numWords": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "voiceSeconds": {
                    "type": "number",
                    "minimum": 0
                  },
                  "backoffSeconds": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              },
              "monitorPlan": {
                "type": "object",
                "properties": {
                  "listenEnabled": {
                    "type": "boolean"
                  },
                  "listenAuthenticationEnabled": {
                    "type": "boolean"
                  },
                  "controlEnabled": {
                    "type": "boolean"
                  },
                  "controlAuthenticationEnabled": {
                    "type": "boolean"
                  }
                }
              },
              "analysisPlan": {
                "type": "object",
                "properties": {
                  "summaryPrompt": {
                    "type": "string"
                  },
                  "structuredDataPrompt": {
                    "type": "string"
                  },
                  "structuredDataSchema": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "successEvaluationPrompt": {
                    "type": "string"
                  },
                  "successEvaluationRubric": {
                    "type": "string"
                  }
                }
              },
              "observabilityPlan": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "langfuse"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "transportConfigurations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "provider"
                  ],
                  "properties": {
                    "provider": {
                      "type": "string",
                      "enum": [
                        "twilio",
                        "vonage",
                        "telnyx"
                      ]
                    },
                    "timeout": {
                      "type": "number",
                      "minimum": 1
                    },
                    "record": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "credentials": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "provider"
                  ],
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "apiKey": {
                      "type": "string"
                    }
                  }
                }
              },
              "credentialIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "hooks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "on",
                    "do"
                  ],
                  "properties": {
                    "on": {
                      "type": "string",
                      "description": "Événement déclencheur (ex. \"call.ending\")"
                    },
                    "do": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type d'action (ex. \"transfer\", \"hangup\")"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              },
              "variableValues": {
                "type": "object",
                "additionalProperties": true
              },
              "server": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "timeoutSeconds": {
                    "type": "number",
                    "minimum": 1
                  },
                  "backoffPlan": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "maxRetries": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "baseDelaySeconds": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  }
                }
              },
              "metadata": {
                "type": "object",
                "additionalProperties": true,
                "description": "Métadonnées personnalisées"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de création"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de dernière modification"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PaginatedKnowledgeBasesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Identifiant unique de la base de connaissances"
                },
                "name": {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 100,
                  "description": "Nom de la base de connaissances"
                },
                "description": {
                  "type": "string",
                  "maxLength": 500,
                  "description": "Description de la base de connaissances"
                },
                "model": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "description": "Fournisseur du modèle d'embedding"
                    },
                    "model": {
                      "type": "string",
                      "description": "Nom du modèle d'embedding"
                    },
                    "dimensions": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Dimensions du vecteur d'embedding"
                    }
                  }
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "IDs des fichiers associés"
                },
                "file_count": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Nombre de fichiers associés"
                },
                "chunks_count": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Nombre de chunks extraits"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Métadonnées personnalisées"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date de création"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date de dernière modification"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "page",
              "limit",
              "total",
              "has_more"
            ],
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "description": "Page actuelle"
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "description": "Nombre d'éléments par page"
              },
              "total": {
                "type": "integer",
                "minimum": 0,
                "description": "Nombre total d'éléments"
              },
              "has_more": {
                "type": "boolean",
                "description": "Indique s'il y a plus de pages"
              }
            }
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "SingleKnowledgeBaseResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Identifiant unique de la base de connaissances"
              },
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "description": "Nom de la base de connaissances"
              },
              "description": {
                "type": "string",
                "maxLength": 500,
                "description": "Description de la base de connaissances"
              },
              "model": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Fournisseur du modèle d'embedding"
                  },
                  "model": {
                    "type": "string",
                    "description": "Nom du modèle d'embedding"
                  },
                  "dimensions": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Dimensions du vecteur d'embedding"
                  }
                }
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "IDs des fichiers associés"
              },
              "file_count": {
                "type": "integer",
                "minimum": 0,
                "description": "Nombre de fichiers associés"
              },
              "chunks_count": {
                "type": "integer",
                "minimum": 0,
                "description": "Nombre de chunks extraits"
              },
              "metadata": {
                "type": "object",
                "additionalProperties": true,
                "description": "Métadonnées personnalisées"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de création"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de dernière modification"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "KnowledgeBaseQueryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "matches"
            ],
            "properties": {
              "matches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "text",
                    "score"
                  ],
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Texte trouvé"
                    },
                    "score": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Score de similarité"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "Métadonnées du chunk"
                    },
                    "source": {
                      "type": "string",
                      "description": "Source du texte"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Token d'authentification manquant ou invalide",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "message"
              ],
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "example": {
              "success": false,
              "message": "Token d'authentification requis"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Ressource non trouvée",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "message"
              ],
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "example": {
              "success": false,
              "message": "Ressource non trouvée"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Erreur de validation des données",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "message"
              ],
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "example": {
              "success": false,
              "message": "Données invalides",
              "details": {
                "field": "name",
                "error": "Le nom est requis"
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Erreur interne du serveur",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "message"
              ],
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "example": {
              "success": false,
              "message": "Erreur interne du serveur"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Assistants",
      "description": "Gestion des assistants vocaux IA"
    },
    {
      "name": "Knowledge Bases",
      "description": "Gestion des bases de connaissances pour les assistants"
    }
  ]
}