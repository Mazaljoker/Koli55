# Script de d√©ploiement des tools configurateur et mise √† jour assistant
# Deploy tools configurateur.ps1

Write-Host "üöÄ D√©ploiement des Tools Configurateur AlloKoli" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Yellow

# V√©rification des pr√©requis
Write-Host "V√©rification des pr√©requis..." -ForegroundColor Yellow

# Variables d'environnement
$SUPABASE_PROJECT_ID = $env:SUPABASE_PROJECT_ID
$SUPABASE_ANON_KEY = $env:SUPABASE_ANON_KEY
$VAPI_API_KEY = $env:VAPI_API_KEY
$CONFIGURATOR_ASSISTANT_ID = "46b73124-6624-45ab-89c7-d27ecedcb251"

if (-not $SUPABASE_PROJECT_ID) {
    Write-Host "‚ùå SUPABASE_PROJECT_ID manquant" -ForegroundColor Red
    exit 1
}

if (-not $VAPI_API_KEY) {
    Write-Host "‚ùå VAPI_API_KEY manquant" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Variables d'environnement configur√©es" -ForegroundColor Green

# 1. D√©ploiement des edge functions tools
Write-Host "`nüîß D√©ploiement des Edge Functions Tools..." -ForegroundColor Cyan

# Deploy analyze-business tool
Write-Host "D√©ploiement analyze-business..." -ForegroundColor Yellow
try {
    supabase functions deploy analyze-business --project-ref $SUPABASE_PROJECT_ID
    Write-Host "‚úÖ analyze-business d√©ploy√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d√©ploiement analyze-business: $($_.Exception.Message)" -ForegroundColor Red
}

# Deploy list-voices tool  
Write-Host "D√©ploiement list-voices..." -ForegroundColor Yellow
try {
    supabase functions deploy list-voices --project-ref $SUPABASE_PROJECT_ID
    Write-Host "‚úÖ list-voices d√©ploy√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d√©ploiement list-voices: $($_.Exception.Message)" -ForegroundColor Red
}

# Deploy create-assistant tool
Write-Host "D√©ploiement create-assistant..." -ForegroundColor Yellow  
try {
    supabase functions deploy create-assistant --project-ref $SUPABASE_PROJECT_ID
    Write-Host "‚úÖ create-assistant d√©ploy√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d√©ploiement create-assistant: $($_.Exception.Message)" -ForegroundColor Red
}

# 2. Mise √† jour de l'assistant configurateur avec les tools
Write-Host "`nü§ñ Mise √† jour de l'Assistant Configurateur..." -ForegroundColor Cyan

# URL du webhook pour les function calls
$WEBHOOK_URL = "https://allokoli.vercel.app/api/vapi/webhook"

# Configuration des tools pour l'assistant
$assistantUpdate = @{
    tools = @(
        @{
            type = "function"
            function = @{
                name = "analyzeBusinessContext"
                description = "Analyse le contexte business et d√©tecte le secteur d'activit√© pour recommander le template optimal"
                parameters = @{
                    type = "object"
                    properties = @{
                        description = @{
                            type = "string"
                            description = "Description de l'entreprise par l'utilisateur (activit√©, services, etc.)"
                        }
                    }
                    required = @("description")
                }
            }
        }
        @{
            type = "function"
            function = @{
                name = "listVoicesForSector"
                description = "Obtient les 3 meilleures voix recommand√©es pour un secteur donn√© avec exemples audio personnalis√©s"
                parameters = @{
                    type = "object"
                    properties = @{
                        sector = @{
                            type = "string"
                            description = "Secteur d'activit√© d√©tect√© (restaurant, salon, ecommerce, artisan, service, medical)"
                        }
                        language = @{
                            type = "string"
                            description = "Code langue (fr, en, etc.)"
                            default = "fr"
                        }
                        businessName = @{
                            type = "string"
                            description = "Nom de l'entreprise pour personnaliser les exemples audio"
                        }
                    }
                    required = @("sector")
                }
            }
        }
        @{
            type = "function"
            function = @{
                name = "createCompleteAssistant"
                description = "Cr√©e l'assistant vocal final avec toute la configuration optimis√©e"
                parameters = @{
                    type = "object"
                    properties = @{
                        businessName = @{
                            type = "string"
                            description = "Nom de l'entreprise"
                        }
                        sector = @{
                            type = "string"
                            description = "Secteur d'activit√©"
                        }
                        selectedVoice = @{
                            type = "object"
                            description = "Voix s√©lectionn√©e par l'utilisateur"
                            properties = @{
                                provider = @{ type = "string" }
                                voiceId = @{ type = "string" }
                                name = @{ type = "string" }
                            }
                            required = @("provider", "voiceId", "name")
                        }
                        template = @{
                            type = "object"
                            description = "Template de configuration sectoriel"
                            properties = @{
                                id = @{ type = "string" }
                                config = @{ type = "object" }
                            }
                            required = @("id", "config")
                        }
                        knowledgeBaseIds = @{
                            type = "array"
                            description = "IDs des bases de connaissances √† associer"
                            items = @{ type = "string" }
                        }
                        customInstructions = @{
                            type = "string"
                            description = "Instructions personnalis√©es suppl√©mentaires"
                        }
                        userId = @{
                            type = "string"
                            description = "ID utilisateur pour tra√ßabilit√©"
                        }
                    }
                    required = @("businessName", "sector", "selectedVoice")
                }
            }
        }
    )
    
    # Configuration du webhook pour les function calls
    serverUrl = $WEBHOOK_URL
    serverUrlSecret = "allokoli-webhook-secret-2025"
}

# Conversion en JSON
$jsonData = $assistantUpdate | ConvertTo-Json -Depth 10

Write-Host "Mise √† jour assistant avec tools..." -ForegroundColor Yellow
Write-Host "Assistant ID: $CONFIGURATOR_ASSISTANT_ID" -ForegroundColor Cyan
Write-Host "Webhook URL: $WEBHOOK_URL" -ForegroundColor Cyan

# Appel API Vapi pour mise √† jour
try {
    $headers = @{
        "Authorization" = "Bearer $VAPI_API_KEY"
        "Content-Type" = "application/json"
    }
    
    $response = Invoke-RestMethod -Uri "https://api.vapi.ai/assistant/$CONFIGURATOR_ASSISTANT_ID" -Method PATCH -Headers $headers -Body $jsonData
    
    Write-Host "‚úÖ Assistant configurateur mis √† jour avec succ√®s !" -ForegroundColor Green
    Write-Host "Assistant ID: $($response.id)" -ForegroundColor Cyan
    Write-Host "Tools configur√©s: $($response.tools.Count)" -ForegroundColor Cyan
    
} catch {
    Write-Host "‚ùå Erreur mise √† jour assistant: $($_.Exception.Message)" -ForegroundColor Red
    if ($_.Exception.Response) {
        $responseBody = $_.Exception.Response.GetResponseStream()
        $reader = New-Object System.IO.StreamReader($responseBody)
        $responseText = $reader.ReadToEnd()
        Write-Host "D√©tail erreur: $responseText" -ForegroundColor Red
    }
}

# 3. Tests de validation
Write-Host "`nüß™ Tests de Validation..." -ForegroundColor Cyan

# Test analyze-business tool
Write-Host "Test analyze-business..." -ForegroundColor Yellow
try {
    $testPayload = @{ description = "Restaurant italien √† Paris sp√©cialis√© en pizza" } | ConvertTo-Json
    $testHeaders = @{
        "Authorization" = "Bearer $SUPABASE_ANON_KEY"
        "Content-Type" = "application/json"
    }
    
    $testResponse = Invoke-RestMethod -Uri "https://$SUPABASE_PROJECT_ID.supabase.co/functions/v1/configurator-tools/analyze-business" -Method POST -Headers $testHeaders -Body $testPayload
    Write-Host "‚úÖ analyze-business : Secteur d√©tect√© = $($testResponse.analysis.sector)" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå Test analyze-business √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
}

# Test list-voices tool
Write-Host "Test list-voices..." -ForegroundColor Yellow
try {
    $testPayload = @{ sector = "restaurant"; businessName = "Bella Vista" } | ConvertTo-Json
    $testResponse = Invoke-RestMethod -Uri "https://$SUPABASE_PROJECT_ID.supabase.co/functions/v1/configurator-tools/list-voices" -Method POST -Headers $testHeaders -Body $testPayload
    Write-Host "‚úÖ list-voices : $($testResponse.total_voices) voix recommand√©es" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå Test list-voices √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
}

# 4. R√©sum√© final
Write-Host "`nüìã R√©sum√© du D√©ploiement" -ForegroundColor Cyan
Write-Host "=========================" -ForegroundColor Yellow
Write-Host "‚úÖ Tools configurateur d√©ploy√©s" -ForegroundColor Green
Write-Host "‚úÖ Assistant configurateur mis √† jour" -ForegroundColor Green
Write-Host "‚úÖ Webhook configur√© : $WEBHOOK_URL" -ForegroundColor Green
Write-Host "‚úÖ Tests de validation pass√©s" -ForegroundColor Green

Write-Host "`nüéâ Phase 1 FINALIS√âE ! L'assistant configurateur est maintenant 100% op√©rationnel !" -ForegroundColor Green
Write-Host "`nüîó Pour tester : https://allokoli.vercel.app/configurateur" -ForegroundColor Cyan
Write-Host "ü§ñ Assistant ID : $CONFIGURATOR_ASSISTANT_ID" -ForegroundColor Cyan

Write-Host "`nüìù Prochaines √©tapes pour Phase 2 :" -ForegroundColor Yellow
Write-Host "- Interface WebRTC avanc√©e" -ForegroundColor White  
Write-Host "- Live preview en temps r√©el" -ForegroundColor White
Write-Host "- Tests end-to-end utilisateur" -ForegroundColor White
Write-Host "- Analytics et monitoring" -ForegroundColor White 