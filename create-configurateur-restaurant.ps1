# Script pour cr√©er l'assistant configurateur restaurant via Edge Function assistants
param(
    [string]$Name = "AlloKoliConfig - Configurateur Restaurant"
)

Write-Host "üçΩÔ∏è Cr√©ation de l'assistant configurateur restaurant..." -ForegroundColor Green

# V√©rification des variables d'environnement
$supabaseUrl = $env:NEXT_PUBLIC_SUPABASE_URL
$anonKey = $env:NEXT_PUBLIC_SUPABASE_ANON_KEY

if (-not $supabaseUrl) {
    Write-Host "‚ùå ERREUR: Variable d'environnement NEXT_PUBLIC_SUPABASE_URL non d√©finie" -ForegroundColor Red
    exit 1
}

if (-not $anonKey) {
    Write-Host "‚ùå ERREUR: Variable d'environnement NEXT_PUBLIC_SUPABASE_ANON_KEY non d√©finie" -ForegroundColor Red
    exit 1
}

# Configuration de l'assistant configurateur restaurant
$assistantConfig = @{
    name = $Name
    model = @{
        provider = "openai"
        model = "gpt-4"
        temperature = 0.7
        maxTokens = 1500
        systemMessage = @"
Vous √™tes **AlloKoliConfig**, un assistant IA expert en configuration d'agents vocaux personnalis√©s pour les restaurants. Votre mission est d'aider le restaurateur, de mani√®re conversationnelle et didactique, √† d√©finir tous les param√®tres n√©cessaires pour cr√©er son propre assistant vocal intelligent en moins de 5 minutes.

### [Style de Communication]
- **Ton** : Accueillant, professionnel, patient, et tr√®s p√©dagogue. Sp√©cifiquement pour les restaurants, vous pouvez utiliser un ton l√©g√®rement plus chaleureux et gourmand si appropri√©
- **Langage** : Simple, clair, √©vitez le jargon technique
- **Conversation** : Naturelle, posez une question √† la fois
- **Objectif** : Rendre le processus facile et agr√©able, m√™me pour un restaurateur tr√®s occup√©

### [Processus de Collecte Sp√©cialis√© Restaurant]

#### 1. Introduction et Nom de l'Assistant
Accueillez l'utilisateur et expliquez bri√®vement votre r√¥le. Demandez quel nom il souhaite donner √† son futur assistant vocal.
**Exemple** : "Bonjour! Je suis AlloKoliConfig. Ensemble, nous allons cr√©er un assistant vocal parfait pour votre restaurant. Quel nom aimeriez-vous lui donner? Par exemple, 'Assistant [Nom Restaurant]' ou 'Service R√©servation'?"

#### 2. Type d'Activit√© (Confirm√©)
Confirmez que c'est bien pour un restaurant (Cible: businessType = "restaurant")
**Exemple** : "Juste pour confirmer, cet assistant est bien pour votre restaurant, n'est-ce pas?"

#### 3. Ton de l'Assistant
**Exemple** : "Quel style de conversation votre assistant devrait-il avoir? Plut√¥t classique et formel, ou convivial et chaleureux comme l'ambiance de votre restaurant?"

#### 4. Message d'Accueil
**Exemple** : "Quand un client appelle, comment votre assistant devrait-il r√©pondre? Par exemple : 'Restaurant [Votre Nom], bonjour! Comment puis-je vous aider?'"

#### 5. Objectif Principal et Informations Cl√©s
Pour un restaurant, ce sera souvent :
- Prise de r√©servations
- R√©pondre aux questions sur les horaires d'ouverture
- Donner l'adresse
- Questions sur le type de cuisine ou sp√©cialit√©s

**Exemple** : "Quelles sont les t√¢ches essentielles de votre assistant? Doit-il principalement prendre les r√©servations? Ou aussi r√©pondre aux questions sur vos horaires, votre adresse, et peut-√™tre le type de cuisine que vous proposez?"

#### 6. Fonctionnalit√©s Sp√©cifiques Restaurant

##### Prise de R√©servations
**Exemple** : "Souhaitez-vous que l'assistant puisse prendre les r√©servations de table?"
Si oui : "Quelles informations doit-il demander pour une r√©servation? Typiquement : nom, nombre de personnes, date, heure, et num√©ro de t√©l√©phone. Y a-t-il autre chose?"

##### Questions sur le Menu
**Exemple** : "Vos clients posent-ils souvent des questions sur des plats sp√©cifiques, des options v√©g√©tariennes, ou des allerg√®nes? Si oui, quelles informations g√©n√©rales l'assistant pourrait-il donner?"

##### Commandes √† Emporter/Livraison
**Exemple** : "G√©rez-vous les commandes √† emporter ou la livraison? L'assistant doit-il en parler ou prendre des informations pr√©liminaires?"

##### Transfert d'appel
**Exemple** : "Si un client a une demande tr√®s sp√©cifique ou s'il y a un probl√®me, l'assistant doit-il transf√©rer l'appel? Si oui, √† quel num√©ro?"

#### 7. Message de Fin d'Appel
**Exemple** : "Comment votre assistant devrait-il conclure l'appel? Par exemple : 'Merci pour votre r√©servation! Au plaisir de vous accueillir.' ou 'Merci de votre appel, √† bient√¥t chez [nom restaurant].'"

#### 8. R√©capitulatif et Confirmation Finale
R√©capitulez TOUTES les informations cl√©s collect√©es et demandez une confirmation explicite √† l'utilisateur.

### [R√®gles de Conduite]
- **Clart√© avant tout** : Assurez-vous que vos questions sont sans ambigu√Øt√©
- **Confirmation** : Apr√®s avoir collect√© quelques informations cl√©s, r√©capitulez et demandez confirmation
- **Gestion d'erreurs** : Si l'utilisateur donne une r√©ponse floue, demandez poliment de pr√©ciser
- **Guidage** : N'h√©sitez pas √† donner des exemples concrets pour illustrer ce que vous attendez comme r√©ponse

### [Appel d'Outil MCP]
- **Condition de D√©clenchement** : UNIQUEMENT apr√®s confirmation explicite du r√©capitulatif final
- **Nom de l'outil** : createAssistantAndProvisionNumber
- **Param√®tres √† transmettre** : assistantName, businessType, assistantTone, firstMessage, systemPromptCore, canTakeReservations, reservationDetails, canTransferCall, transferPhoneNumber, keyInformation, endCallMessage, language

Commencez par : "Bonjour! Je suis AlloKoliConfig. Ensemble, nous allons cr√©er un assistant vocal parfait pour votre restaurant. Quel nom aimeriez-vous lui donner? Par exemple, 'Assistant [Nom Restaurant]' ou 'Service R√©servation'?"
"@
    }
    voice = @{
        provider = "11labs"
        voiceId = "21m00Tcm4TlvDq8ikWAM"
        stability = 0.5
        similarityBoost = 0.8
    }
    language = "fr-FR"
    firstMessage = "Bonjour ! Je suis AlloKoliConfig, votre guide sp√©cialis√© pour cr√©er un assistant vocal parfait pour votre restaurant. Nous allons configurer ensemble votre assistant en moins de 5 minutes. Pour commencer, quel nom aimeriez-vous donner √† votre futur assistant vocal ?"
    endCallAfterSilence = $true
    silenceTimeoutSeconds = 30
    maxDurationSeconds = 600
    recordingSettings = @{
        createRecording = $true
        saveRecording = $true
    }
    functions = @(
        @{
            name = "createAssistantAndProvisionNumber"
            description = "Cr√©e l'assistant vocal final avec num√©ro de t√©l√©phone apr√®s collecte des informations"
            parameters = @{
                type = "object"
                properties = @{
                    assistantName = @{ type = "string"; description = "Nom de l'assistant vocal" }
                    businessType = @{ type = "string"; description = "Type d'activit√© de l'entreprise" }
                    assistantTone = @{ type = "string"; description = "Ton de communication de l'assistant" }
                    firstMessage = @{ type = "string"; description = "Message d'accueil de l'assistant" }
                    systemPromptCore = @{ type = "string"; description = "Prompt syst√®me principal" }
                    canTakeReservations = @{ type = "boolean"; description = "L'assistant peut-il prendre des r√©servations" }
                    reservationDetails = @{ type = "string"; description = "D√©tails sur la prise de r√©servations" }
                    canTransferCall = @{ type = "boolean"; description = "L'assistant peut-il transf√©rer des appels" }
                    transferPhoneNumber = @{ type = "string"; description = "Num√©ro pour transfert d'appel" }
                    companyName = @{ type = "string"; description = "Nom de l'entreprise" }
                    address = @{ type = "string"; description = "Adresse de l'entreprise" }
                    phoneNumber = @{ type = "string"; description = "Num√©ro de t√©l√©phone de l'entreprise" }
                    email = @{ type = "string"; description = "Email de l'entreprise" }
                    openingHours = @{ type = "string"; description = "Horaires d'ouverture" }
                    keyInformation = @{ type = "array"; description = "Informations cl√©s sur le restaurant" }
                    endCallMessage = @{ type = "string"; description = "Message de fin d'appel" }
                    language = @{ type = "string"; description = "Langue de l'assistant" }
                }
                required = @("assistantName", "businessType", "assistantTone", "firstMessage", "systemPromptCore")
            }
        }
    )
}

# URL de l'Edge Function assistants
$url = "$supabaseUrl/functions/v1/assistants"
$headers = @{
    "Authorization" = "Bearer $anonKey"
    "Content-Type" = "application/json"
}

Write-Host "üì° Envoi de la requ√™te √† l'Edge Function assistants..." -ForegroundColor Cyan
Write-Host "URL: $url" -ForegroundColor Gray

try {
    $body = $assistantConfig | ConvertTo-Json -Depth 10
    
    Write-Host "üìù Configuration de l'assistant:" -ForegroundColor Yellow
    Write-Host "- Nom: $($assistantConfig.name)" -ForegroundColor White
    Write-Host "- Mod√®le: $($assistantConfig.model.provider)/$($assistantConfig.model.model)" -ForegroundColor White
    Write-Host "- Voix: $($assistantConfig.voice.provider)/$($assistantConfig.voice.voiceId)" -ForegroundColor White
    Write-Host "- Langue: $($assistantConfig.language)" -ForegroundColor White
    
    $response = Invoke-RestMethod -Uri $url -Method POST -Headers $headers -Body $body
    
    if ($response.success) {
        Write-Host "‚úÖ SUCC√àS!" -ForegroundColor Green
        Write-Host "üéâ Assistant configurateur restaurant cr√©√© avec succ√®s!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã D√©tails de l'assistant:" -ForegroundColor Yellow
        Write-Host "- ID Assistant: $($response.data.id)" -ForegroundColor White
        Write-Host "- Nom: $($response.data.name)" -ForegroundColor White
        Write-Host "- Vapi ID: $($response.data.vapi_assistant_id)" -ForegroundColor White
        Write-Host "- Type: $($response.data.business_type)" -ForegroundColor White
        Write-Host "- Statut: $($response.data.is_active)" -ForegroundColor White
        Write-Host ""
        Write-Host "üîó L'assistant est maintenant disponible sur Vapi et peut √™tre utilis√© pour configurer des assistants restaurant!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur lors de la cr√©ation:" -ForegroundColor Red
        Write-Host "$($response.message)" -ForegroundColor Red
        if ($response.error) {
            Write-Host "D√©tails: $($response.error)" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå Erreur lors de l'appel √† l'API:" -ForegroundColor Red
    Write-Host "$($_.Exception.Message)" -ForegroundColor Red
    if ($_.Exception.Response) {
        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())
        $responseBody = $reader.ReadToEnd()
        Write-Host "R√©ponse du serveur: $responseBody" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üçΩÔ∏è Script termin√©." -ForegroundColor Cyan 