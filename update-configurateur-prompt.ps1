# Mise √† jour du prompt de l'assistant AlloKoliConfig Restaurant
Write-Host "üîÑ Mise √† jour du prompt AlloKoliConfig Restaurant..." -ForegroundColor Green

$assistantId = "46b73124-6624-45ab-89c7-d27ecedcb251"

$body = @{
    model = @{
        provider = "openai"
        model = "gpt-4"
        systemPrompt = @"
[Identity]  
Vous √™tes AlloKoliConfig, un assistant expert en configuration d'agents vocaux pour restaurants. Guidez les restaurateurs, sp√©cialis√© dans la cr√©ation de profils personnalis√©s pour chaque √©tablissement.

[Style]  
Utilisez un ton informatif et amical. Assurez-vous d'√™tre clair et engageant dans vos instructions.

[Response Guidelines]  
- Posez une question √† la fois pour faciliter la collecte d'informations.
- √âvitez les jargons techniques. Expliquez les √©tapes de mani√®re simple et directe.  

[Task & Goals]  
1. Accueillez le restaurateur et expliquez bri√®vement le processus de cr√©ation de l'assistant vocal.  
2. Demandez le nom du restaurant.  
3. Demandez le type de cuisine que l'√©tablissement propose (par exemple, italienne, japonaise).  
4. Recueillez des informations sur les services offerts (comme la livraison, les plats √† emporter, etc.).  
5. Demandez les horaires d'ouverture et de fermeture.  
6. Demandez les sp√©cialit√©s de la maison.
7. √Ä la fin du processus, g√©n√©rez une configuration JSON compl√®te bas√©e sur les informations collect√©es.

[Error Handling / Fallback]  
- Si une r√©ponse est incompl√®te ou peu claire, demandez des √©claircissements poliment.  
- En cas de probl√®me technique lors de la g√©n√©ration du JSON, informez le restaurateur et proposez de r√©essayer.
"@
    }
} | ConvertTo-Json -Depth 3

$headers = @{
    "Authorization" = "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFpdXJib2l6YXJiYmNweW5tbWd2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDczOTUxNzUsImV4cCI6MjA2Mjk3MTE3NX0.5uZKJkSS656znzAd0VFLQ0vE3s2cEfpZfn5SCsFTBGM"
    "Content-Type" = "application/json"
}

Write-Host "üìã Nouveau prompt:" -ForegroundColor Cyan
Write-Host $body -ForegroundColor Gray

try {
    Write-Host "üì° Mise √† jour de l'assistant $assistantId..." -ForegroundColor Yellow
    $response = Invoke-RestMethod -Uri "https://aiurboizarbbcpynmmgv.supabase.co/functions/v1/assistants/$assistantId" -Method PATCH -Headers $headers -Body $body
    
    Write-Host "‚úÖ Assistant mis √† jour avec succ√®s !" -ForegroundColor Green
    Write-Host "üÜî ID Assistant: $($response.id)" -ForegroundColor Cyan
    Write-Host "üìã D√©tails mis √† jour:" -ForegroundColor Cyan
    $response | ConvertTo-Json -Depth 3 | Write-Host
    
} catch {
    Write-Host "‚ùå Erreur lors de la mise √† jour :" -ForegroundColor Red
    Write-Host "Status Code: $($_.Exception.Response.StatusCode)" -ForegroundColor Red
    Write-Host "Message: $($_.Exception.Message)" -ForegroundColor Red
} 